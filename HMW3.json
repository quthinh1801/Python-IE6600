{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "jupyter": {
     "source_hidden": true
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "For section 1: You need to write your code in order to regenerate the exact result as shown under each question\n",
      "For section 2: You need to generate the answers based on the questions without having the sample results.\n",
      "\n",
      "\n"
     ]
    }
   ],
   "source": [
    "\"\"\"\n",
    "For section 1: You need to write your code in order to regenerate the exact result as shown under each question\n",
    "For section 2: You need to generate the answers based on the questions without having the sample results.\n",
    "\n",
    "\"\"\"\n",
    "\n",
    "print(__doc__)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Section 1"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Note\n",
    "* Instructions have been included for each segment. You do not have to follow them exactly, but they are included to help you think through the steps."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Purchase ID</th>\n",
       "      <th>SN</th>\n",
       "      <th>Age</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Item ID</th>\n",
       "      <th>Item Name</th>\n",
       "      <th>Price</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>Lisim78</td>\n",
       "      <td>20</td>\n",
       "      <td>Male</td>\n",
       "      <td>108</td>\n",
       "      <td>Extraction, Quickblade Of Trembling Hands</td>\n",
       "      <td>3.53</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>Lisovynya38</td>\n",
       "      <td>40</td>\n",
       "      <td>Male</td>\n",
       "      <td>143</td>\n",
       "      <td>Frenzied Scimitar</td>\n",
       "      <td>1.56</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>Ithergue48</td>\n",
       "      <td>24</td>\n",
       "      <td>Male</td>\n",
       "      <td>92</td>\n",
       "      <td>Final Critic</td>\n",
       "      <td>4.88</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>Chamassasya86</td>\n",
       "      <td>24</td>\n",
       "      <td>Male</td>\n",
       "      <td>100</td>\n",
       "      <td>Blindscythe</td>\n",
       "      <td>3.27</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>Iskosia90</td>\n",
       "      <td>23</td>\n",
       "      <td>Male</td>\n",
       "      <td>131</td>\n",
       "      <td>Fury</td>\n",
       "      <td>1.44</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Purchase ID             SN  Age Gender  Item ID  \\\n",
       "0            0        Lisim78   20   Male      108   \n",
       "1            1    Lisovynya38   40   Male      143   \n",
       "2            2     Ithergue48   24   Male       92   \n",
       "3            3  Chamassasya86   24   Male      100   \n",
       "4            4      Iskosia90   23   Male      131   \n",
       "\n",
       "                                   Item Name  Price  \n",
       "0  Extraction, Quickblade Of Trembling Hands   3.53  \n",
       "1                          Frenzied Scimitar   1.56  \n",
       "2                               Final Critic   4.88  \n",
       "3                                Blindscythe   3.27  \n",
       "4                                       Fury   1.44  "
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Dependencies and Setup\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "\n",
    "# File to Load (Remember to Change These)\n",
    "file_to_load = \"purchase_data.csv\"\n",
    "\n",
    "# Read Purchasing File and store into Pandas data frame\n",
    "purchase_data = pd.read_csv(file_to_load)\n",
    "\n",
    "purchase_data.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Q1 - check for missing data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Purchase ID    780\n",
       "SN             780\n",
       "Age            780\n",
       "Gender         780\n",
       "Item ID        780\n",
       "Item Name      780\n",
       "Price          780\n",
       "dtype: int64"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "purchase_data.notnull().sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Player Count"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Q2 - Display the total number of players\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Total # of Players</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>576</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Total # of Players\n",
       "0                 576"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "NumPlayer = purchase_data[['SN']]\n",
    "NumPlayer = NumPlayer.drop_duplicates() \n",
    "NumPlayer = NumPlayer.shape[0]\n",
    "DisplayNumPlayer = pd.DataFrame({'Total # of Players': [NumPlayer]})\n",
    "DisplayNumPlayer "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Q3- Purchasing Analysis (Total)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "* Obtain number of unique items, average price, etc.\n",
    "\n",
    "\n",
    "* Create a summary data frame to hold the results\n",
    "\n",
    "\n",
    "* Optional: give the displayed data cleaner formatting\n",
    "\n",
    "\n",
    "* Display the summary data frame\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unique items</th>\n",
       "      <th>Average Price</th>\n",
       "      <th>Total Purchases</th>\n",
       "      <th>Total Revenue</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>183</td>\n",
       "      <td>$3.05</td>\n",
       "      <td>780</td>\n",
       "      <td>$2,379.77</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Unique items Average Price  Total Purchases Total Revenue\n",
       "0           183         $3.05              780     $2,379.77"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Create a subset from purchase_data\n",
    "TotalPurchase = purchase_data[['Item ID','Price']]\n",
    "\n",
    "#Calculate Unique Items, Average Price, Total Purchases, Total Revenue\n",
    "UniqueValue = TotalPurchase['Item ID'].nunique()\n",
    "AveragePrice = round(TotalPurchase['Price'].mean(),2)\n",
    "TotalPurchases = TotalPurchase['Item ID'].count()\n",
    "TotalRevenue = TotalPurchase['Price'].sum()\n",
    "\n",
    "#Create data frame\n",
    "TotalPurchase = pd.DataFrame({'Unique items':[UniqueValue],'Average Price':[AveragePrice],'Total Purchases':[TotalPurchases],'Total Revenue':[TotalRevenue]})\n",
    "\n",
    "#Apply $ sign\n",
    "TotalPurchase['Average Price'] = TotalPurchase['Average Price'].map('${:,.2f}'.format)\n",
    "TotalPurchase['Total Revenue'] = TotalPurchase['Total Revenue'].map('${:,.2f}'.format)\n",
    "\n",
    "#Display result\n",
    "TotalPurchase"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Q4- Gender Demographics"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "* Percentage and Count of Male Players\n",
    "\n",
    "\n",
    "* Percentage and Count of Female Players\n",
    "\n",
    "\n",
    "* Percentage and Count of Other / Non-Disclosed\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Count</th>\n",
       "      <th>Percent of Total Players</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Male</th>\n",
       "      <td>484</td>\n",
       "      <td>84.03%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Female</th>\n",
       "      <td>81</td>\n",
       "      <td>14.06%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Other / Non-Disclosed</th>\n",
       "      <td>11</td>\n",
       "      <td>1.91%</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                       Count Percent of Total Players\n",
       "                                                     \n",
       "Male                     484                   84.03%\n",
       "Female                    81                   14.06%\n",
       "Other / Non-Disclosed     11                    1.91%"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Subset on SN and Gender\n",
    "GenderDemo = purchase_data[['SN','Gender']] \n",
    "\n",
    "#Remove Duplicates\n",
    "GenderDemo = GenderDemo.drop_duplicates() \n",
    "\n",
    "#Apply Group By to Count\n",
    "GenderDemo = GenderDemo.groupby(['Gender']).size().to_frame('Count').reset_index()\n",
    "\n",
    "#Calculate Percentage\n",
    "GenderDemo['Percent of Total Players'] = GenderDemo['Count']/ GenderDemo['Count'].sum()*100\n",
    "\n",
    "#Reformat, add % sign to 'Percent of Total Players' column\n",
    "\n",
    "GenderDemo['Percent of Total Players'] = GenderDemo['Percent of Total Players'].map('{:,.2f}%'.format)\n",
    "\n",
    "#Sort by Percent of Total Players\n",
    "GenderDemo = GenderDemo.sort_values(by = ['Percent of Total Players'], ascending = False)\n",
    "\n",
    "#Clear column name for Gender\n",
    "GenderDemo = GenderDemo.rename(columns = {\"Gender\":\"\"})\n",
    "\n",
    "#Set index that column\n",
    "GenderDemo.set_index('')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "### Q5-Purchasing Analysis (Gender)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "* Run basic calculations to obtain purchase count, avg. purchase price, avg. purchase total per person etc. by gender\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "* Create a summary data frame to hold the results\n",
    "\n",
    "\n",
    "* Optional: give the displayed data cleaner formatting\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Amount Purchase</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Gender</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Female</th>\n",
       "      <td>$361.94</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Male</th>\n",
       "      <td>$1,967.64</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Other / Non-Disclosed</th>\n",
       "      <td>$50.19</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                      Amount Purchase\n",
       "Gender                               \n",
       "Female                        $361.94\n",
       "Male                        $1,967.64\n",
       "Other / Non-Disclosed          $50.19"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Create subset\n",
    "Gender_Purchase = purchase_data[['Gender','Price']] \n",
    "\n",
    "#Rename Price column\n",
    "Gender_Purchase = Gender_Purchase.rename(columns = {\"Price\":\"Amount Purchase\"})\n",
    "\n",
    "#Apply group by\n",
    "Gender_Purchase = Gender_Purchase.groupby('Gender').agg({'Amount Purchase': 'sum'})\n",
    "                                                         \n",
    "#Apply $ sign for Price-related column                                                         \n",
    "Gender_Purchase['Amount Purchase'] = Gender_Purchase['Amount Purchase'].map('${:,.2f}'.format)\n",
    "\n",
    "#Display value\n",
    "Gender_Purchase                                                        "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Q6-Display the summary data frame"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Number of Players</th>\n",
       "      <th>Purchase Count</th>\n",
       "      <th>Avg Purchase Price</th>\n",
       "      <th>Total Revenue</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Female</th>\n",
       "      <td>81</td>\n",
       "      <td>113</td>\n",
       "      <td>$3.20</td>\n",
       "      <td>$361.94</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Male</th>\n",
       "      <td>484</td>\n",
       "      <td>652</td>\n",
       "      <td>$3.02</td>\n",
       "      <td>$1,967.64</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Other / Non-Disclosed</th>\n",
       "      <td>11</td>\n",
       "      <td>15</td>\n",
       "      <td>$3.35</td>\n",
       "      <td>$50.19</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                       Number of Players  Purchase Count Avg Purchase Price  \\\n",
       "                                                                              \n",
       "Female                                81             113              $3.20   \n",
       "Male                                 484             652              $3.02   \n",
       "Other / Non-Disclosed                 11              15              $3.35   \n",
       "\n",
       "                      Total Revenue  \n",
       "                                     \n",
       "Female                      $361.94  \n",
       "Male                      $1,967.64  \n",
       "Other / Non-Disclosed        $50.19  "
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pd.options.mode.chained_assignment = None  # default='warn'\n",
    "\n",
    "#Create subset\n",
    "GenderSummary1 = purchase_data[['Gender','SN','Price']] \n",
    "\n",
    "#Duplicate Price column\n",
    "GenderSummary1['Price2'] = GenderSummary1['Price']\n",
    "\n",
    "#Apply Group By\n",
    "GenderSummary1 = GenderSummary1.groupby('Gender').agg({'SN': 'count','Price': 'mean', 'Price2': 'sum'})\n",
    "\n",
    "#Rename, round numbers, apply $ sign column\n",
    "GenderSummary1 = GenderSummary1.rename(columns = {\"SN\":\"Purchase Count\",\"Price\":\"Avg Purchase Price\",\"Price2\":\"Total Revenue\"})\n",
    "GenderSummary1['Avg Purchase Price'] = round(GenderSummary1['Avg Purchase Price'],2)\n",
    "GenderSummary1['Avg Purchase Price'] = GenderSummary1['Avg Purchase Price'].map('${:,.2f}'.format)\n",
    "GenderSummary1['Total Revenue'] = GenderSummary1['Total Revenue'].map('${:,.2f}'.format)\n",
    "\n",
    "#Calculate number of players\n",
    "GenderSummary2 = purchase_data[['Gender','SN']]\n",
    "GenderSummary2 = GenderSummary2.drop_duplicates() \n",
    "GenderSummary2 = GenderSummary2.groupby('Gender').agg({'SN':'count'})\n",
    "GenderSummary2 = GenderSummary2.rename(columns = {\"SN\": \"Number of Players\"})\n",
    "\n",
    "#Merge 2 Data Frames\n",
    "GenderSummary = pd.merge(GenderSummary2,GenderSummary1, left_index = True, right_on = 'Gender')\n",
    "\n",
    "#Format index\n",
    "GenderSummary = GenderSummary.reset_index()\n",
    "GenderSummary = GenderSummary.rename(columns = {\"Gender\":\"\"})\n",
    "GenderSummary.set_index('')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Q7- Age Demographics"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "* Establish bins for ages\n",
    "\n",
    "\n",
    "* Categorize the existing players using the age bins. Hint: use pd.cut()\n",
    "\n",
    "\n",
    "* Calculate the numbers and percentages by age group\n",
    "\n",
    "\n",
    "* Create a summary data frame to hold the results\n",
    "\n",
    "\n",
    "* Optional: round the percentage column to two decimal points\n",
    "\n",
    "\n",
    "* Display Age Demographics Table\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Total Count</th>\n",
       "      <th>Percentage of Players</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>age_group</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>&lt;10</th>\n",
       "      <td>17</td>\n",
       "      <td>2.95</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10-14</th>\n",
       "      <td>22</td>\n",
       "      <td>3.82</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15-19</th>\n",
       "      <td>107</td>\n",
       "      <td>18.58</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20-24</th>\n",
       "      <td>258</td>\n",
       "      <td>44.79</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25-29</th>\n",
       "      <td>77</td>\n",
       "      <td>13.37</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30-34</th>\n",
       "      <td>52</td>\n",
       "      <td>9.03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35-39</th>\n",
       "      <td>31</td>\n",
       "      <td>5.38</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40+</th>\n",
       "      <td>12</td>\n",
       "      <td>2.08</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           Total Count  Percentage of Players\n",
       "age_group                                    \n",
       "<10                 17                   2.95\n",
       "10-14               22                   3.82\n",
       "15-19              107                  18.58\n",
       "20-24              258                  44.79\n",
       "25-29               77                  13.37\n",
       "30-34               52                   9.03\n",
       "35-39               31                   5.38\n",
       "40+                 12                   2.08"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Subset on SN and Age\n",
    "AgeDemo = purchase_data[['Age','SN']] \n",
    "\n",
    "#Drop duplicates\n",
    "AgeDemo = AgeDemo.drop_duplicates() \n",
    "\n",
    "#Drop column SN since it's irrelevant now\n",
    "AgeDemo = AgeDemo[['Age']] \n",
    "\n",
    "#Categorize Age Group\n",
    "bins = [0,10,15,20,25,30,35,40,100]\n",
    "labels = ['<10','10-14','15-19','20-24','25-29','30-34','35-39','40+']\n",
    "AgeDemo['age_group'] = pd.cut(AgeDemo['Age'], bins = bins, labels = labels, right = False )\n",
    "\n",
    "#Apply group by to count\n",
    "AgeDemo = AgeDemo.groupby(by = \"age_group\").count()\n",
    "\n",
    "#Rename column Age to Total Count\n",
    "AgeDemo = AgeDemo.rename(columns = {\"Age\":\"Total Count\"})\n",
    "\n",
    "#Calculate Percentage of Players\n",
    "AgeDemo['Percentage of Players'] = round(AgeDemo['Total Count']/ AgeDemo['Total Count'].sum()*100,2)\n",
    "\n",
    "#Display Result\n",
    "AgeDemo\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Q8- Purchasing Analysis (Age)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "* Bin the purchase_data data frame by age\n",
    "\n",
    "\n",
    "* Run basic calculations to obtain purchase count, avg. purchase price, avg. purchase total per person etc. in the table below\n",
    "\n",
    "\n",
    "* Create a summary data frame to hold the results\n",
    "\n",
    "\n",
    "* Optional: give the displayed data cleaner formatting\n",
    "\n",
    "\n",
    "* Display the summary data frame"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "import warnings #To ignore warning\n",
    "warnings.filterwarnings(\"ignore\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style  type=\"text/css\" >\n",
       "</style><table id=\"T_6e53be94_47b7_11eb_808c_fcaa1458e891\" ><thead>    <tr>        <th class=\"blank level0\" ></th>        <th class=\"col_heading level0 col0\" >Purchase Count</th>        <th class=\"col_heading level0 col1\" >Average Purchase Price</th>        <th class=\"col_heading level0 col2\" >Total Purchase Value</th>    </tr>    <tr>        <th class=\"index_name level0\" >age_group</th>        <th class=\"blank\" ></th>        <th class=\"blank\" ></th>        <th class=\"blank\" ></th>    </tr></thead><tbody>\n",
       "                <tr>\n",
       "                        <th id=\"T_6e53be94_47b7_11eb_808c_fcaa1458e891level0_row0\" class=\"row_heading level0 row0\" ><10</th>\n",
       "                        <td id=\"T_6e53be94_47b7_11eb_808c_fcaa1458e891row0_col0\" class=\"data row0 col0\" >23</td>\n",
       "                        <td id=\"T_6e53be94_47b7_11eb_808c_fcaa1458e891row0_col1\" class=\"data row0 col1\" >$3.35</td>\n",
       "                        <td id=\"T_6e53be94_47b7_11eb_808c_fcaa1458e891row0_col2\" class=\"data row0 col2\" >$77.13</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_6e53be94_47b7_11eb_808c_fcaa1458e891level0_row1\" class=\"row_heading level0 row1\" >10-14</th>\n",
       "                        <td id=\"T_6e53be94_47b7_11eb_808c_fcaa1458e891row1_col0\" class=\"data row1 col0\" >28</td>\n",
       "                        <td id=\"T_6e53be94_47b7_11eb_808c_fcaa1458e891row1_col1\" class=\"data row1 col1\" >$2.96</td>\n",
       "                        <td id=\"T_6e53be94_47b7_11eb_808c_fcaa1458e891row1_col2\" class=\"data row1 col2\" >$82.78</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_6e53be94_47b7_11eb_808c_fcaa1458e891level0_row2\" class=\"row_heading level0 row2\" >15-19</th>\n",
       "                        <td id=\"T_6e53be94_47b7_11eb_808c_fcaa1458e891row2_col0\" class=\"data row2 col0\" >136</td>\n",
       "                        <td id=\"T_6e53be94_47b7_11eb_808c_fcaa1458e891row2_col1\" class=\"data row2 col1\" >$3.04</td>\n",
       "                        <td id=\"T_6e53be94_47b7_11eb_808c_fcaa1458e891row2_col2\" class=\"data row2 col2\" >$412.89</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_6e53be94_47b7_11eb_808c_fcaa1458e891level0_row3\" class=\"row_heading level0 row3\" >20-24</th>\n",
       "                        <td id=\"T_6e53be94_47b7_11eb_808c_fcaa1458e891row3_col0\" class=\"data row3 col0\" >365</td>\n",
       "                        <td id=\"T_6e53be94_47b7_11eb_808c_fcaa1458e891row3_col1\" class=\"data row3 col1\" >$3.05</td>\n",
       "                        <td id=\"T_6e53be94_47b7_11eb_808c_fcaa1458e891row3_col2\" class=\"data row3 col2\" >$1,114.06</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_6e53be94_47b7_11eb_808c_fcaa1458e891level0_row4\" class=\"row_heading level0 row4\" >25-29</th>\n",
       "                        <td id=\"T_6e53be94_47b7_11eb_808c_fcaa1458e891row4_col0\" class=\"data row4 col0\" >101</td>\n",
       "                        <td id=\"T_6e53be94_47b7_11eb_808c_fcaa1458e891row4_col1\" class=\"data row4 col1\" >$2.90</td>\n",
       "                        <td id=\"T_6e53be94_47b7_11eb_808c_fcaa1458e891row4_col2\" class=\"data row4 col2\" >$293.00</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_6e53be94_47b7_11eb_808c_fcaa1458e891level0_row5\" class=\"row_heading level0 row5\" >30-34</th>\n",
       "                        <td id=\"T_6e53be94_47b7_11eb_808c_fcaa1458e891row5_col0\" class=\"data row5 col0\" >73</td>\n",
       "                        <td id=\"T_6e53be94_47b7_11eb_808c_fcaa1458e891row5_col1\" class=\"data row5 col1\" >$2.93</td>\n",
       "                        <td id=\"T_6e53be94_47b7_11eb_808c_fcaa1458e891row5_col2\" class=\"data row5 col2\" >$214.00</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_6e53be94_47b7_11eb_808c_fcaa1458e891level0_row6\" class=\"row_heading level0 row6\" >35-39</th>\n",
       "                        <td id=\"T_6e53be94_47b7_11eb_808c_fcaa1458e891row6_col0\" class=\"data row6 col0\" >41</td>\n",
       "                        <td id=\"T_6e53be94_47b7_11eb_808c_fcaa1458e891row6_col1\" class=\"data row6 col1\" >$3.60</td>\n",
       "                        <td id=\"T_6e53be94_47b7_11eb_808c_fcaa1458e891row6_col2\" class=\"data row6 col2\" >$147.67</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_6e53be94_47b7_11eb_808c_fcaa1458e891level0_row7\" class=\"row_heading level0 row7\" >40+</th>\n",
       "                        <td id=\"T_6e53be94_47b7_11eb_808c_fcaa1458e891row7_col0\" class=\"data row7 col0\" >13</td>\n",
       "                        <td id=\"T_6e53be94_47b7_11eb_808c_fcaa1458e891row7_col1\" class=\"data row7 col1\" >$2.94</td>\n",
       "                        <td id=\"T_6e53be94_47b7_11eb_808c_fcaa1458e891row7_col2\" class=\"data row7 col2\" >$38.24</td>\n",
       "            </tr>\n",
       "    </tbody></table>"
      ],
      "text/plain": [
       "<pandas.io.formats.style.Styler at 0x20383dd42b0>"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Subset on Age and Price\n",
    "AgeAnalysis = purchase_data[['Age','Price']] \n",
    "\n",
    "#Categorize Age Group by bins and labels set above\n",
    "AgeAnalysis['age_group'] = pd.cut(AgeAnalysis['Age'], bins = bins, labels = labels, right = False )\n",
    "\n",
    "#Drop column Age since it's irrelevant now\n",
    "AgeAnalysis = AgeAnalysis[['age_group','Price']]\n",
    "\n",
    "#Duplicate Price columns for group by computation\n",
    "AgeAnalysis['Price2'] = AgeAnalysis['Price']\n",
    "AgeAnalysis['Price3'] = AgeAnalysis['Price']\n",
    "AgeAnalysis = AgeAnalysis.groupby('age_group').agg({'Price': 'count','Price2': 'mean', 'Price3': 'sum'})\n",
    "\n",
    "#Rename columns\n",
    "AgeAnalysis = AgeAnalysis.rename(columns = {\"Price\":\"Purchase Count\",\"Price2\":\"Average Purchase Price\",\"Price3\":\"Total Purchase Value\"})\n",
    "\n",
    "#Round Average Purchase Price Column\n",
    "AgeAnalysis['Average Purchase Price'] = round(AgeAnalysis['Average Purchase Price'],2)\n",
    "\n",
    "#Apply $ to Average Purchase Price and Total Purchase Value\n",
    "dollar_dict = {'Average Purchase Price': '${:,.2f}','Total Purchase Value': '${:,.2f}'}\n",
    "AgeAnalysis.style.format(dollar_dict)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Q9-Top Spenders"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "* Run basic calculations to obtain the results in the table below\n",
    "\n",
    "\n",
    "* Create a summary data frame to hold the results\n",
    "\n",
    "\n",
    "* Sort the total purchase value column in descending order\n",
    "\n",
    "\n",
    "* Optional: give the displayed data cleaner formatting\n",
    "\n",
    "\n",
    "* Display a preview of the summary data frame\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Purchase Count</th>\n",
       "      <th>Average Purchase Price</th>\n",
       "      <th>Total Purchase Value</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Lisosia93</th>\n",
       "      <td>5</td>\n",
       "      <td>$3.79</td>\n",
       "      <td>$18.96</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Idastidru52</th>\n",
       "      <td>4</td>\n",
       "      <td>$3.86</td>\n",
       "      <td>$15.45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Chamjask73</th>\n",
       "      <td>3</td>\n",
       "      <td>$4.61</td>\n",
       "      <td>$13.83</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Iral74</th>\n",
       "      <td>4</td>\n",
       "      <td>$3.40</td>\n",
       "      <td>$13.62</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Iskadarya95</th>\n",
       "      <td>3</td>\n",
       "      <td>$4.37</td>\n",
       "      <td>$13.10</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             Purchase Count Average Purchase Price Total Purchase Value\n",
       "                                                                       \n",
       "Lisosia93                 5                  $3.79               $18.96\n",
       "Idastidru52               4                  $3.86               $15.45\n",
       "Chamjask73                3                  $4.61               $13.83\n",
       "Iral74                    4                  $3.40               $13.62\n",
       "Iskadarya95               3                  $4.37               $13.10"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Subset on SN and Price\n",
    "TopSpenders = purchase_data[['SN','Price']] \n",
    "\n",
    "#Perform group by computations\n",
    "TopSpenders['Price2'] = TopSpenders['Price']\n",
    "TopSpenders['Price3'] = TopSpenders['Price']\n",
    "TopSpenders =  TopSpenders.groupby('SN').agg({'Price': 'count','Price2': 'mean', 'Price3': 'sum'})\n",
    "\n",
    "#Rename column\n",
    "TopSpenders = TopSpenders.rename(columns = {\"Price\":\"Purchase Count\",\"Price2\":\"Average Purchase Price\",\"Price3\":\"Total Purchase Value\"})\n",
    "\n",
    "#Round Average Purchase Price Column\n",
    "TopSpenders['Average Purchase Price'] = round(TopSpenders['Average Purchase Price'],2)\n",
    "\n",
    "#Sort by Percent of Total Players\n",
    "TopSpenders = TopSpenders.sort_values(by = ['Total Purchase Value'], ascending = False)\n",
    "\n",
    "#Apply $ sign\n",
    "TopSpenders['Average Purchase Price'] = TopSpenders['Average Purchase Price'].map('${:,.2f}'.format)\n",
    "TopSpenders['Total Purchase Value'] = TopSpenders['Total Purchase Value'].map('${:,.2f}'.format)\n",
    "\n",
    "#Format index\n",
    "TopSpenders = TopSpenders.reset_index()\n",
    "TopSpenders = TopSpenders.rename(columns = {\"SN\":\"\"})\n",
    "TopSpenders = TopSpenders.set_index('')\n",
    "TopSpenders.head(5)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Q10-Most Popular Items"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "* Retrieve the Item ID, Item Name, and Item Price columns\n",
    "\n",
    "\n",
    "* Group by Item ID and Item Name. Perform calculations to obtain purchase count, item price, and total purchase value\n",
    "\n",
    "\n",
    "* Create a summary data frame to hold the results\n",
    "\n",
    "\n",
    "* Sort the purchase count column in descending order\n",
    "\n",
    "\n",
    "* Optional: give the displayed data cleaner formatting\n",
    "\n",
    "\n",
    "* Display a preview of the summary data frame\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>Purchase Count</th>\n",
       "      <th>Item Price</th>\n",
       "      <th>Total Purchase Value</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Item ID</th>\n",
       "      <th>Item Name</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>178</th>\n",
       "      <th>Oathbreaker, Last Hope of the Breaking Storm</th>\n",
       "      <td>12</td>\n",
       "      <td>$4.23</td>\n",
       "      <td>$50.76</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>145</th>\n",
       "      <th>Fiery Glass Crusader</th>\n",
       "      <td>9</td>\n",
       "      <td>$4.58</td>\n",
       "      <td>$41.22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>108</th>\n",
       "      <th>Extraction, Quickblade Of Trembling Hands</th>\n",
       "      <td>9</td>\n",
       "      <td>$3.53</td>\n",
       "      <td>$31.77</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>82</th>\n",
       "      <th>Nirvana</th>\n",
       "      <td>9</td>\n",
       "      <td>$4.90</td>\n",
       "      <td>$44.10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <th>Pursuit, Cudgel of Necromancy</th>\n",
       "      <td>8</td>\n",
       "      <td>$1.02</td>\n",
       "      <td>$8.16</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                      Purchase Count  \\\n",
       "Item ID Item Name                                                      \n",
       "178     Oathbreaker, Last Hope of the Breaking Storm              12   \n",
       "145     Fiery Glass Crusader                                       9   \n",
       "108     Extraction, Quickblade Of Trembling Hands                  9   \n",
       "82      Nirvana                                                    9   \n",
       "19      Pursuit, Cudgel of Necromancy                              8   \n",
       "\n",
       "                                                     Item Price  \\\n",
       "Item ID Item Name                                                 \n",
       "178     Oathbreaker, Last Hope of the Breaking Storm      $4.23   \n",
       "145     Fiery Glass Crusader                              $4.58   \n",
       "108     Extraction, Quickblade Of Trembling Hands         $3.53   \n",
       "82      Nirvana                                           $4.90   \n",
       "19      Pursuit, Cudgel of Necromancy                     $1.02   \n",
       "\n",
       "                                                     Total Purchase Value  \n",
       "Item ID Item Name                                                          \n",
       "178     Oathbreaker, Last Hope of the Breaking Storm               $50.76  \n",
       "145     Fiery Glass Crusader                                       $41.22  \n",
       "108     Extraction, Quickblade Of Trembling Hands                  $31.77  \n",
       "82      Nirvana                                                    $44.10  \n",
       "19      Pursuit, Cudgel of Necromancy                               $8.16  "
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Create subset and duplicate columns\n",
    "PopularItems = purchase_data[['Item ID','Item Name','Price']] \n",
    "PopularItems['Price2'] = PopularItems['Price']\n",
    "PopularItems['Price3'] = PopularItems['Price']\n",
    "\n",
    "#Group By to find count, price, and total value\n",
    "PopularItems = PopularItems.groupby(['Item ID','Item Name']).agg({'Price':'count','Price2':'max','Price3':'sum'})\n",
    "\n",
    "#Rename column for presentation\n",
    "PopularItems = PopularItems.rename(columns = {\"Price\":\"Purchase Count\",\"Price2\":\"Item Price\",\"Price3\":\"Total Purchase Value\"})\n",
    "\n",
    "#Sort column and apply $ sign\n",
    "SortPopularItems = PopularItems.sort_values(by = ['Purchase Count'], ascending = False)\n",
    "SortPopularItems['Item Price'] = PopularItems['Item Price'].map('${:,.2f}'.format)\n",
    "SortPopularItems['Total Purchase Value'] = PopularItems['Total Purchase Value'].map('${:,.2f}'.format)\n",
    "\n",
    "#Display value\n",
    "SortPopularItems.head(5)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Q11-Most Profitable Items"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "* Sort the above table by total purchase value in descending order\n",
    "\n",
    "\n",
    "* Optional: give the displayed data cleaner formatting\n",
    "\n",
    "\n",
    "* Display a preview of the data frame\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>Purchase Count</th>\n",
       "      <th>Item Price</th>\n",
       "      <th>Total Purchase Value</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Item ID</th>\n",
       "      <th>Item Name</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>178</th>\n",
       "      <th>Oathbreaker, Last Hope of the Breaking Storm</th>\n",
       "      <td>12</td>\n",
       "      <td>$4.23</td>\n",
       "      <td>$50.76</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>82</th>\n",
       "      <th>Nirvana</th>\n",
       "      <td>9</td>\n",
       "      <td>$4.90</td>\n",
       "      <td>$44.10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>145</th>\n",
       "      <th>Fiery Glass Crusader</th>\n",
       "      <td>9</td>\n",
       "      <td>$4.58</td>\n",
       "      <td>$41.22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>92</th>\n",
       "      <th>Final Critic</th>\n",
       "      <td>8</td>\n",
       "      <td>$4.88</td>\n",
       "      <td>$39.04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>103</th>\n",
       "      <th>Singed Scalpel</th>\n",
       "      <td>8</td>\n",
       "      <td>$4.35</td>\n",
       "      <td>$34.80</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                      Purchase Count  \\\n",
       "Item ID Item Name                                                      \n",
       "178     Oathbreaker, Last Hope of the Breaking Storm              12   \n",
       "82      Nirvana                                                    9   \n",
       "145     Fiery Glass Crusader                                       9   \n",
       "92      Final Critic                                               8   \n",
       "103     Singed Scalpel                                             8   \n",
       "\n",
       "                                                     Item Price  \\\n",
       "Item ID Item Name                                                 \n",
       "178     Oathbreaker, Last Hope of the Breaking Storm      $4.23   \n",
       "82      Nirvana                                           $4.90   \n",
       "145     Fiery Glass Crusader                              $4.58   \n",
       "92      Final Critic                                      $4.88   \n",
       "103     Singed Scalpel                                    $4.35   \n",
       "\n",
       "                                                     Total Purchase Value  \n",
       "Item ID Item Name                                                          \n",
       "178     Oathbreaker, Last Hope of the Breaking Storm               $50.76  \n",
       "82      Nirvana                                                    $44.10  \n",
       "145     Fiery Glass Crusader                                       $41.22  \n",
       "92      Final Critic                                               $39.04  \n",
       "103     Singed Scalpel                                             $34.80  "
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Sort column and apply $ sign\n",
    "SortProfitableItems = PopularItems.sort_values(by = ['Total Purchase Value'], ascending = False)\n",
    "SortProfitableItems['Item Price'] = SortProfitableItems['Item Price'].map('${:,.2f}'.format)\n",
    "SortProfitableItems['Total Purchase Value'] = SortProfitableItems['Total Purchase Value'].map('${:,.2f}'.format)\n",
    "\n",
    "#Display value\n",
    "SortProfitableItems.head(5)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Section 2"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Q12: Import the covid-19 dataset provided and set the state as the index of the dataframe."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>death</th>\n",
       "      <th>hospitalized</th>\n",
       "      <th>negative</th>\n",
       "      <th>pending</th>\n",
       "      <th>positive</th>\n",
       "      <th>recovered</th>\n",
       "      <th>total</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>state</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>WY</th>\n",
       "      <td>50</td>\n",
       "      <td>272.0</td>\n",
       "      <td>95212</td>\n",
       "      <td>NaN</td>\n",
       "      <td>5948</td>\n",
       "      <td>4791.0</td>\n",
       "      <td>101160</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NE</th>\n",
       "      <td>478</td>\n",
       "      <td>2315.0</td>\n",
       "      <td>410594</td>\n",
       "      <td>NaN</td>\n",
       "      <td>45044</td>\n",
       "      <td>33198.0</td>\n",
       "      <td>455638</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ND</th>\n",
       "      <td>191</td>\n",
       "      <td>859.0</td>\n",
       "      <td>219646</td>\n",
       "      <td>NaN</td>\n",
       "      <td>21846</td>\n",
       "      <td>17938.0</td>\n",
       "      <td>241492</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NC</th>\n",
       "      <td>3532</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2824239</td>\n",
       "      <td>NaN</td>\n",
       "      <td>210632</td>\n",
       "      <td>184422.0</td>\n",
       "      <td>3034871</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>MT</th>\n",
       "      <td>180</td>\n",
       "      <td>717.0</td>\n",
       "      <td>330087</td>\n",
       "      <td>NaN</td>\n",
       "      <td>13071</td>\n",
       "      <td>9256.0</td>\n",
       "      <td>343158</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       death  hospitalized  negative  pending  positive  recovered    total\n",
       "state                                                                      \n",
       "WY        50         272.0     95212      NaN      5948     4791.0   101160\n",
       "NE       478        2315.0    410594      NaN     45044    33198.0   455638\n",
       "ND       191         859.0    219646      NaN     21846    17938.0   241492\n",
       "NC      3532           NaN   2824239      NaN    210632   184422.0  3034871\n",
       "MT       180         717.0    330087      NaN     13071     9256.0   343158"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "covid = pd.read_csv(\"us_states_covid19_daily.csv\", index_col = 'state')\n",
    "covid.head(5)    "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Q13: Replace all the NaN values in 'pending' column with the string 'None'."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>death</th>\n",
       "      <th>hospitalized</th>\n",
       "      <th>negative</th>\n",
       "      <th>pending</th>\n",
       "      <th>positive</th>\n",
       "      <th>recovered</th>\n",
       "      <th>total</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>state</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>CA</th>\n",
       "      <td>15792</td>\n",
       "      <td>NaN</td>\n",
       "      <td>13894577</td>\n",
       "      <td>None</td>\n",
       "      <td>810625</td>\n",
       "      <td>NaN</td>\n",
       "      <td>14705202</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>WA</th>\n",
       "      <td>2124</td>\n",
       "      <td>7483.0</td>\n",
       "      <td>1767357</td>\n",
       "      <td>None</td>\n",
       "      <td>87042</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1854399</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>AZ</th>\n",
       "      <td>5650</td>\n",
       "      <td>22119.0</td>\n",
       "      <td>1243641</td>\n",
       "      <td>None</td>\n",
       "      <td>218507</td>\n",
       "      <td>35261.0</td>\n",
       "      <td>1462148</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>WI</th>\n",
       "      <td>1337</td>\n",
       "      <td>7300.0</td>\n",
       "      <td>1423247</td>\n",
       "      <td>190</td>\n",
       "      <td>129123</td>\n",
       "      <td>99925.0</td>\n",
       "      <td>1552370</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>AS</th>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1571</td>\n",
       "      <td>None</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1571</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>WV</th>\n",
       "      <td>350</td>\n",
       "      <td>NaN</td>\n",
       "      <td>545720</td>\n",
       "      <td>None</td>\n",
       "      <td>15848</td>\n",
       "      <td>11507.0</td>\n",
       "      <td>561568</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>AR</th>\n",
       "      <td>1369</td>\n",
       "      <td>5354.0</td>\n",
       "      <td>949107</td>\n",
       "      <td>None</td>\n",
       "      <td>83697</td>\n",
       "      <td>75312.0</td>\n",
       "      <td>1032804</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>MS</th>\n",
       "      <td>2969</td>\n",
       "      <td>5844.0</td>\n",
       "      <td>638843</td>\n",
       "      <td>None</td>\n",
       "      <td>98190</td>\n",
       "      <td>89737.0</td>\n",
       "      <td>737033</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>AL</th>\n",
       "      <td>2540</td>\n",
       "      <td>17257.0</td>\n",
       "      <td>994475</td>\n",
       "      <td>None</td>\n",
       "      <td>154701</td>\n",
       "      <td>67948.0</td>\n",
       "      <td>1149176</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>AK</th>\n",
       "      <td>56</td>\n",
       "      <td>NaN</td>\n",
       "      <td>448427</td>\n",
       "      <td>None</td>\n",
       "      <td>8780</td>\n",
       "      <td>4555.0</td>\n",
       "      <td>457207</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       death  hospitalized  negative pending  positive  recovered     total\n",
       "state                                                                      \n",
       "CA     15792           NaN  13894577    None    810625        NaN  14705202\n",
       "WA      2124        7483.0   1767357    None     87042        NaN   1854399\n",
       "AZ      5650       22119.0   1243641    None    218507    35261.0   1462148\n",
       "WI      1337        7300.0   1423247     190    129123    99925.0   1552370\n",
       "AS         0           NaN      1571    None         0        NaN      1571\n",
       "WV       350           NaN    545720    None     15848    11507.0    561568\n",
       "AR      1369        5354.0    949107    None     83697    75312.0   1032804\n",
       "MS      2969        5844.0    638843    None     98190    89737.0    737033\n",
       "AL      2540       17257.0    994475    None    154701    67948.0   1149176\n",
       "AK        56           NaN    448427    None      8780     4555.0    457207"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "covid['pending'].fillna('None', inplace = True)\n",
    "covid.tail(10)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Q14: Replace the NaN values in the 'hospitalized' columns with the mean value of the column."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>death</th>\n",
       "      <th>hospitalized</th>\n",
       "      <th>negative</th>\n",
       "      <th>pending</th>\n",
       "      <th>positive</th>\n",
       "      <th>recovered</th>\n",
       "      <th>total</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>state</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>WY</th>\n",
       "      <td>50</td>\n",
       "      <td>272.000000</td>\n",
       "      <td>95212</td>\n",
       "      <td>None</td>\n",
       "      <td>5948</td>\n",
       "      <td>4791.0</td>\n",
       "      <td>101160</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NE</th>\n",
       "      <td>478</td>\n",
       "      <td>2315.000000</td>\n",
       "      <td>410594</td>\n",
       "      <td>None</td>\n",
       "      <td>45044</td>\n",
       "      <td>33198.0</td>\n",
       "      <td>455638</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ND</th>\n",
       "      <td>191</td>\n",
       "      <td>859.000000</td>\n",
       "      <td>219646</td>\n",
       "      <td>None</td>\n",
       "      <td>21846</td>\n",
       "      <td>17938.0</td>\n",
       "      <td>241492</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NC</th>\n",
       "      <td>3532</td>\n",
       "      <td>11044.567568</td>\n",
       "      <td>2824239</td>\n",
       "      <td>None</td>\n",
       "      <td>210632</td>\n",
       "      <td>184422.0</td>\n",
       "      <td>3034871</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>MT</th>\n",
       "      <td>180</td>\n",
       "      <td>717.000000</td>\n",
       "      <td>330087</td>\n",
       "      <td>None</td>\n",
       "      <td>13071</td>\n",
       "      <td>9256.0</td>\n",
       "      <td>343158</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NH</th>\n",
       "      <td>439</td>\n",
       "      <td>738.000000</td>\n",
       "      <td>265447</td>\n",
       "      <td>None</td>\n",
       "      <td>8266</td>\n",
       "      <td>7522.0</td>\n",
       "      <td>273713</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>MP</th>\n",
       "      <td>2</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>15112</td>\n",
       "      <td>None</td>\n",
       "      <td>70</td>\n",
       "      <td>29.0</td>\n",
       "      <td>15182</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>MO</th>\n",
       "      <td>2118</td>\n",
       "      <td>11044.567568</td>\n",
       "      <td>1178272</td>\n",
       "      <td>None</td>\n",
       "      <td>126113</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1304385</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>MN</th>\n",
       "      <td>2089</td>\n",
       "      <td>7701.000000</td>\n",
       "      <td>1315567</td>\n",
       "      <td>None</td>\n",
       "      <td>99134</td>\n",
       "      <td>89392.0</td>\n",
       "      <td>1414701</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>MI</th>\n",
       "      <td>7083</td>\n",
       "      <td>11044.567568</td>\n",
       "      <td>3509848</td>\n",
       "      <td>None</td>\n",
       "      <td>138014</td>\n",
       "      <td>95051.0</td>\n",
       "      <td>3647862</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       death  hospitalized  negative pending  positive  recovered    total\n",
       "state                                                                     \n",
       "WY        50    272.000000     95212    None      5948     4791.0   101160\n",
       "NE       478   2315.000000    410594    None     45044    33198.0   455638\n",
       "ND       191    859.000000    219646    None     21846    17938.0   241492\n",
       "NC      3532  11044.567568   2824239    None    210632   184422.0  3034871\n",
       "MT       180    717.000000    330087    None     13071     9256.0   343158\n",
       "NH       439    738.000000    265447    None      8266     7522.0   273713\n",
       "MP         2      4.000000     15112    None        70       29.0    15182\n",
       "MO      2118  11044.567568   1178272    None    126113        NaN  1304385\n",
       "MN      2089   7701.000000   1315567    None     99134    89392.0  1414701\n",
       "MI      7083  11044.567568   3509848    None    138014    95051.0  3647862"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "hospitalized = covid['hospitalized']\n",
    "hospitalized_mean = hospitalized.mean() \n",
    "covid['hospitalized'].fillna(hospitalized_mean, inplace = True)\n",
    "covid.head(10)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Q15: Find the death percentage (round to 2 decimal points) of covid positive patients for each state and add it as a column in the dataset. (death% = death/positive)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "state\n",
       "WY    0.84%\n",
       "NE    1.06%\n",
       "ND    0.87%\n",
       "NC    1.68%\n",
       "MT    1.38%\n",
       "NH    5.31%\n",
       "MP    2.86%\n",
       "MO    1.68%\n",
       "MN    2.11%\n",
       "MI    5.13%\n",
       "ME    2.62%\n",
       "NJ    7.86%\n",
       "MD    3.17%\n",
       "NM    3.00%\n",
       "MA    7.16%\n",
       "NV    2.00%\n",
       "LA    3.29%\n",
       "NY    5.56%\n",
       "KY    1.71%\n",
       "OH    3.12%\n",
       "KS    1.13%\n",
       "OK    1.18%\n",
       "IN    3.03%\n",
       "OR    1.67%\n",
       "IL    3.01%\n",
       "PA    5.12%\n",
       "ID    1.12%\n",
       "PR    1.36%\n",
       "IA    1.57%\n",
       "RI    4.50%\n",
       "HI    1.07%\n",
       "SC    2.28%\n",
       "GU    1.97%\n",
       "SD    1.00%\n",
       "GA    2.21%\n",
       "TN    1.25%\n",
       "FL    2.05%\n",
       "TX    2.10%\n",
       "DE    3.09%\n",
       "UT    0.63%\n",
       "DC    4.09%\n",
       "VA    2.16%\n",
       "CT    7.83%\n",
       "VI    1.52%\n",
       "CO    2.79%\n",
       "VT    3.31%\n",
       "CA    1.95%\n",
       "WA    2.44%\n",
       "AZ    2.59%\n",
       "WI    1.04%\n",
       "AS     nan%\n",
       "WV    2.21%\n",
       "AR    1.64%\n",
       "MS    3.02%\n",
       "AL    1.64%\n",
       "AK    0.64%\n",
       "Name: death percentage, dtype: object"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "covid['death percentage'] = round(covid['death']/covid['positive']*100,2)\n",
    "covid['death percentage'] = covid['death percentage'].map('{:,.2f}%'.format)      \n",
    "covid['death percentage']"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Q16: Print the total number of negative, positive, and recovered cases in the US."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Total Number of negative cases:  92955835\n",
      "Total Number of positive cases:  7198622\n",
      "Total Number of positive cases:  2840747.0\n"
     ]
    }
   ],
   "source": [
    "print('Total Number of negative cases: ',covid['negative'].sum())\n",
    "print('Total Number of positive cases: ',covid['positive'].sum())\n",
    "print('Total Number of positive cases: ',covid['recovered'].sum())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Q17: What percent of the covid positive patients from the state of NY were hospitalized (round the value to 2 decimal places)?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Percentage of covid positive patitents from the state of NY were hospitalized:  19.62 %\n"
     ]
    }
   ],
   "source": [
    "NewYork = covid.loc['NY']\n",
    "Q17 = round(NewYork.hospitalized/NewYork.positive*100,2)\n",
    "print('Percentage of covid positive patitents from the state of NY were hospitalized: ',Q17,'%')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Q18: Return the state name with the maximum number of covid positive cases"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'CA'\n"
     ]
    }
   ],
   "source": [
    "maxpositive = covid['positive'].max()\n",
    "Q18 = covid[covid['positive'] == maxpositive]\n",
    "Q18 = Q18.index.tolist()\n",
    "print(str(Q18).strip('[]'))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Q19: Return the number of states with more than the mean value of positive cases"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Number of states with more than the mean value of positive cases:  19\n"
     ]
    }
   ],
   "source": [
    "#Find average positive cases\n",
    "positive = covid['positive']\n",
    "positive_mean = positive.mean()\n",
    "\n",
    "#Count numbers of state with more than mean value of positive cases\n",
    "count = 0\n",
    "for i in positive:\n",
    "    if i > positive_mean:\n",
    "        count = count+1\n",
    "        \n",
    "#Display value\n",
    "print('Number of states with more than the mean value of positive cases: ',count)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Q20: Print the data of those states whose no of negative cases is greater than the number of negative cases for MT. Then sort the dataframe wrt the total column values in descending order."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>death</th>\n",
       "      <th>hospitalized</th>\n",
       "      <th>negative</th>\n",
       "      <th>pending</th>\n",
       "      <th>positive</th>\n",
       "      <th>recovered</th>\n",
       "      <th>total</th>\n",
       "      <th>death percentage</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>state</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>CA</th>\n",
       "      <td>15792</td>\n",
       "      <td>11044.567568</td>\n",
       "      <td>13894577</td>\n",
       "      <td>None</td>\n",
       "      <td>810625</td>\n",
       "      <td>NaN</td>\n",
       "      <td>14705202</td>\n",
       "      <td>1.95%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NY</th>\n",
       "      <td>25479</td>\n",
       "      <td>89995.000000</td>\n",
       "      <td>10288664</td>\n",
       "      <td>None</td>\n",
       "      <td>458649</td>\n",
       "      <td>76754.0</td>\n",
       "      <td>10747313</td>\n",
       "      <td>5.56%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>TX</th>\n",
       "      <td>15711</td>\n",
       "      <td>11044.567568</td>\n",
       "      <td>5488190</td>\n",
       "      <td>None</td>\n",
       "      <td>748967</td>\n",
       "      <td>664883.0</td>\n",
       "      <td>6237157</td>\n",
       "      <td>2.10%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>IL</th>\n",
       "      <td>8916</td>\n",
       "      <td>11044.567568</td>\n",
       "      <td>5331548</td>\n",
       "      <td>None</td>\n",
       "      <td>295763</td>\n",
       "      <td>NaN</td>\n",
       "      <td>5627311</td>\n",
       "      <td>3.01%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>FL</th>\n",
       "      <td>14488</td>\n",
       "      <td>44608.000000</td>\n",
       "      <td>4594668</td>\n",
       "      <td>3980</td>\n",
       "      <td>706516</td>\n",
       "      <td>NaN</td>\n",
       "      <td>5301184</td>\n",
       "      <td>2.05%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>MI</th>\n",
       "      <td>7083</td>\n",
       "      <td>11044.567568</td>\n",
       "      <td>3509848</td>\n",
       "      <td>None</td>\n",
       "      <td>138014</td>\n",
       "      <td>95051.0</td>\n",
       "      <td>3647862</td>\n",
       "      <td>5.13%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NJ</th>\n",
       "      <td>16126</td>\n",
       "      <td>23439.000000</td>\n",
       "      <td>3407757</td>\n",
       "      <td>None</td>\n",
       "      <td>205275</td>\n",
       "      <td>34859.0</td>\n",
       "      <td>3613032</td>\n",
       "      <td>7.86%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>OH</th>\n",
       "      <td>4804</td>\n",
       "      <td>15516.000000</td>\n",
       "      <td>3011948</td>\n",
       "      <td>None</td>\n",
       "      <td>153987</td>\n",
       "      <td>132980.0</td>\n",
       "      <td>3165935</td>\n",
       "      <td>3.12%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NC</th>\n",
       "      <td>3532</td>\n",
       "      <td>11044.567568</td>\n",
       "      <td>2824239</td>\n",
       "      <td>None</td>\n",
       "      <td>210632</td>\n",
       "      <td>184422.0</td>\n",
       "      <td>3034871</td>\n",
       "      <td>1.68%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>GA</th>\n",
       "      <td>7021</td>\n",
       "      <td>28522.000000</td>\n",
       "      <td>2615653</td>\n",
       "      <td>None</td>\n",
       "      <td>318026</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2933679</td>\n",
       "      <td>2.21%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>TN</th>\n",
       "      <td>2454</td>\n",
       "      <td>8733.000000</td>\n",
       "      <td>2688217</td>\n",
       "      <td>None</td>\n",
       "      <td>196139</td>\n",
       "      <td>179322.0</td>\n",
       "      <td>2884356</td>\n",
       "      <td>1.25%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>LA</th>\n",
       "      <td>5511</td>\n",
       "      <td>11044.567568</td>\n",
       "      <td>2151146</td>\n",
       "      <td>None</td>\n",
       "      <td>167458</td>\n",
       "      <td>154163.0</td>\n",
       "      <td>2318604</td>\n",
       "      <td>3.29%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>MA</th>\n",
       "      <td>9456</td>\n",
       "      <td>12686.000000</td>\n",
       "      <td>2104449</td>\n",
       "      <td>None</td>\n",
       "      <td>132116</td>\n",
       "      <td>113768.0</td>\n",
       "      <td>2236565</td>\n",
       "      <td>7.16%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>VA</th>\n",
       "      <td>3208</td>\n",
       "      <td>18541.000000</td>\n",
       "      <td>1909374</td>\n",
       "      <td>314</td>\n",
       "      <td>148271</td>\n",
       "      <td>17633.0</td>\n",
       "      <td>2057645</td>\n",
       "      <td>2.16%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>PA</th>\n",
       "      <td>8142</td>\n",
       "      <td>11044.567568</td>\n",
       "      <td>1879127</td>\n",
       "      <td>None</td>\n",
       "      <td>158967</td>\n",
       "      <td>130352.0</td>\n",
       "      <td>2038094</td>\n",
       "      <td>5.12%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>WA</th>\n",
       "      <td>2124</td>\n",
       "      <td>7483.000000</td>\n",
       "      <td>1767357</td>\n",
       "      <td>None</td>\n",
       "      <td>87042</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1854399</td>\n",
       "      <td>2.44%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>MD</th>\n",
       "      <td>3949</td>\n",
       "      <td>15530.000000</td>\n",
       "      <td>1493282</td>\n",
       "      <td>None</td>\n",
       "      <td>124725</td>\n",
       "      <td>7536.0</td>\n",
       "      <td>1618007</td>\n",
       "      <td>3.17%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>CT</th>\n",
       "      <td>4508</td>\n",
       "      <td>11560.000000</td>\n",
       "      <td>1536443</td>\n",
       "      <td>None</td>\n",
       "      <td>57550</td>\n",
       "      <td>9310.0</td>\n",
       "      <td>1593993</td>\n",
       "      <td>7.83%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>WI</th>\n",
       "      <td>1337</td>\n",
       "      <td>7300.000000</td>\n",
       "      <td>1423247</td>\n",
       "      <td>190</td>\n",
       "      <td>129123</td>\n",
       "      <td>99925.0</td>\n",
       "      <td>1552370</td>\n",
       "      <td>1.04%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>AZ</th>\n",
       "      <td>5650</td>\n",
       "      <td>22119.000000</td>\n",
       "      <td>1243641</td>\n",
       "      <td>None</td>\n",
       "      <td>218507</td>\n",
       "      <td>35261.0</td>\n",
       "      <td>1462148</td>\n",
       "      <td>2.59%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>MN</th>\n",
       "      <td>2089</td>\n",
       "      <td>7701.000000</td>\n",
       "      <td>1315567</td>\n",
       "      <td>None</td>\n",
       "      <td>99134</td>\n",
       "      <td>89392.0</td>\n",
       "      <td>1414701</td>\n",
       "      <td>2.11%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>KY</th>\n",
       "      <td>1174</td>\n",
       "      <td>5279.000000</td>\n",
       "      <td>1315769</td>\n",
       "      <td>None</td>\n",
       "      <td>68840</td>\n",
       "      <td>11840.0</td>\n",
       "      <td>1384609</td>\n",
       "      <td>1.71%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>IN</th>\n",
       "      <td>3632</td>\n",
       "      <td>12814.000000</td>\n",
       "      <td>1259831</td>\n",
       "      <td>None</td>\n",
       "      <td>120019</td>\n",
       "      <td>94816.0</td>\n",
       "      <td>1379850</td>\n",
       "      <td>3.03%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>SC</th>\n",
       "      <td>3378</td>\n",
       "      <td>9160.000000</td>\n",
       "      <td>1161156</td>\n",
       "      <td>None</td>\n",
       "      <td>147942</td>\n",
       "      <td>71691.0</td>\n",
       "      <td>1309098</td>\n",
       "      <td>2.28%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>MO</th>\n",
       "      <td>2118</td>\n",
       "      <td>11044.567568</td>\n",
       "      <td>1178272</td>\n",
       "      <td>None</td>\n",
       "      <td>126113</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1304385</td>\n",
       "      <td>1.68%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>OK</th>\n",
       "      <td>1031</td>\n",
       "      <td>6449.000000</td>\n",
       "      <td>1116829</td>\n",
       "      <td>4926</td>\n",
       "      <td>87199</td>\n",
       "      <td>73100.0</td>\n",
       "      <td>1204028</td>\n",
       "      <td>1.18%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>AL</th>\n",
       "      <td>2540</td>\n",
       "      <td>17257.000000</td>\n",
       "      <td>994475</td>\n",
       "      <td>None</td>\n",
       "      <td>154701</td>\n",
       "      <td>67948.0</td>\n",
       "      <td>1149176</td>\n",
       "      <td>1.64%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>AR</th>\n",
       "      <td>1369</td>\n",
       "      <td>5354.000000</td>\n",
       "      <td>949107</td>\n",
       "      <td>None</td>\n",
       "      <td>83697</td>\n",
       "      <td>75312.0</td>\n",
       "      <td>1032804</td>\n",
       "      <td>1.64%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NM</th>\n",
       "      <td>875</td>\n",
       "      <td>3475.000000</td>\n",
       "      <td>885829</td>\n",
       "      <td>None</td>\n",
       "      <td>29157</td>\n",
       "      <td>16565.0</td>\n",
       "      <td>914986</td>\n",
       "      <td>3.00%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>CO</th>\n",
       "      <td>1952</td>\n",
       "      <td>7558.000000</td>\n",
       "      <td>837127</td>\n",
       "      <td>None</td>\n",
       "      <td>70025</td>\n",
       "      <td>6500.0</td>\n",
       "      <td>907152</td>\n",
       "      <td>2.79%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>UT</th>\n",
       "      <td>459</td>\n",
       "      <td>3847.000000</td>\n",
       "      <td>756928</td>\n",
       "      <td>None</td>\n",
       "      <td>73042</td>\n",
       "      <td>55141.0</td>\n",
       "      <td>829970</td>\n",
       "      <td>0.63%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>IA</th>\n",
       "      <td>1344</td>\n",
       "      <td>11044.567568</td>\n",
       "      <td>679271</td>\n",
       "      <td>None</td>\n",
       "      <td>85596</td>\n",
       "      <td>68456.0</td>\n",
       "      <td>764867</td>\n",
       "      <td>1.57%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>MS</th>\n",
       "      <td>2969</td>\n",
       "      <td>5844.000000</td>\n",
       "      <td>638843</td>\n",
       "      <td>None</td>\n",
       "      <td>98190</td>\n",
       "      <td>89737.0</td>\n",
       "      <td>737033</td>\n",
       "      <td>3.02%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NV</th>\n",
       "      <td>1600</td>\n",
       "      <td>11044.567568</td>\n",
       "      <td>618116</td>\n",
       "      <td>None</td>\n",
       "      <td>79980</td>\n",
       "      <td>2220.0</td>\n",
       "      <td>698096</td>\n",
       "      <td>2.00%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>OR</th>\n",
       "      <td>559</td>\n",
       "      <td>2598.000000</td>\n",
       "      <td>652364</td>\n",
       "      <td>None</td>\n",
       "      <td>33509</td>\n",
       "      <td>5720.0</td>\n",
       "      <td>685873</td>\n",
       "      <td>1.67%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>WV</th>\n",
       "      <td>350</td>\n",
       "      <td>11044.567568</td>\n",
       "      <td>545720</td>\n",
       "      <td>None</td>\n",
       "      <td>15848</td>\n",
       "      <td>11507.0</td>\n",
       "      <td>561568</td>\n",
       "      <td>2.21%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>KS</th>\n",
       "      <td>678</td>\n",
       "      <td>2917.000000</td>\n",
       "      <td>461701</td>\n",
       "      <td>None</td>\n",
       "      <td>59749</td>\n",
       "      <td>2095.0</td>\n",
       "      <td>521450</td>\n",
       "      <td>1.13%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>AK</th>\n",
       "      <td>56</td>\n",
       "      <td>11044.567568</td>\n",
       "      <td>448427</td>\n",
       "      <td>None</td>\n",
       "      <td>8780</td>\n",
       "      <td>4555.0</td>\n",
       "      <td>457207</td>\n",
       "      <td>0.64%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NE</th>\n",
       "      <td>478</td>\n",
       "      <td>2315.000000</td>\n",
       "      <td>410594</td>\n",
       "      <td>None</td>\n",
       "      <td>45044</td>\n",
       "      <td>33198.0</td>\n",
       "      <td>455638</td>\n",
       "      <td>1.06%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ME</th>\n",
       "      <td>141</td>\n",
       "      <td>449.000000</td>\n",
       "      <td>429709</td>\n",
       "      <td>None</td>\n",
       "      <td>5391</td>\n",
       "      <td>4678.0</td>\n",
       "      <td>435100</td>\n",
       "      <td>2.62%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>DC</th>\n",
       "      <td>627</td>\n",
       "      <td>11044.567568</td>\n",
       "      <td>372534</td>\n",
       "      <td>None</td>\n",
       "      <td>15326</td>\n",
       "      <td>12155.0</td>\n",
       "      <td>387860</td>\n",
       "      <td>4.09%</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       death  hospitalized  negative pending  positive  recovered     total  \\\n",
       "state                                                                         \n",
       "CA     15792  11044.567568  13894577    None    810625        NaN  14705202   \n",
       "NY     25479  89995.000000  10288664    None    458649    76754.0  10747313   \n",
       "TX     15711  11044.567568   5488190    None    748967   664883.0   6237157   \n",
       "IL      8916  11044.567568   5331548    None    295763        NaN   5627311   \n",
       "FL     14488  44608.000000   4594668    3980    706516        NaN   5301184   \n",
       "MI      7083  11044.567568   3509848    None    138014    95051.0   3647862   \n",
       "NJ     16126  23439.000000   3407757    None    205275    34859.0   3613032   \n",
       "OH      4804  15516.000000   3011948    None    153987   132980.0   3165935   \n",
       "NC      3532  11044.567568   2824239    None    210632   184422.0   3034871   \n",
       "GA      7021  28522.000000   2615653    None    318026        NaN   2933679   \n",
       "TN      2454   8733.000000   2688217    None    196139   179322.0   2884356   \n",
       "LA      5511  11044.567568   2151146    None    167458   154163.0   2318604   \n",
       "MA      9456  12686.000000   2104449    None    132116   113768.0   2236565   \n",
       "VA      3208  18541.000000   1909374     314    148271    17633.0   2057645   \n",
       "PA      8142  11044.567568   1879127    None    158967   130352.0   2038094   \n",
       "WA      2124   7483.000000   1767357    None     87042        NaN   1854399   \n",
       "MD      3949  15530.000000   1493282    None    124725     7536.0   1618007   \n",
       "CT      4508  11560.000000   1536443    None     57550     9310.0   1593993   \n",
       "WI      1337   7300.000000   1423247     190    129123    99925.0   1552370   \n",
       "AZ      5650  22119.000000   1243641    None    218507    35261.0   1462148   \n",
       "MN      2089   7701.000000   1315567    None     99134    89392.0   1414701   \n",
       "KY      1174   5279.000000   1315769    None     68840    11840.0   1384609   \n",
       "IN      3632  12814.000000   1259831    None    120019    94816.0   1379850   \n",
       "SC      3378   9160.000000   1161156    None    147942    71691.0   1309098   \n",
       "MO      2118  11044.567568   1178272    None    126113        NaN   1304385   \n",
       "OK      1031   6449.000000   1116829    4926     87199    73100.0   1204028   \n",
       "AL      2540  17257.000000    994475    None    154701    67948.0   1149176   \n",
       "AR      1369   5354.000000    949107    None     83697    75312.0   1032804   \n",
       "NM       875   3475.000000    885829    None     29157    16565.0    914986   \n",
       "CO      1952   7558.000000    837127    None     70025     6500.0    907152   \n",
       "UT       459   3847.000000    756928    None     73042    55141.0    829970   \n",
       "IA      1344  11044.567568    679271    None     85596    68456.0    764867   \n",
       "MS      2969   5844.000000    638843    None     98190    89737.0    737033   \n",
       "NV      1600  11044.567568    618116    None     79980     2220.0    698096   \n",
       "OR       559   2598.000000    652364    None     33509     5720.0    685873   \n",
       "WV       350  11044.567568    545720    None     15848    11507.0    561568   \n",
       "KS       678   2917.000000    461701    None     59749     2095.0    521450   \n",
       "AK        56  11044.567568    448427    None      8780     4555.0    457207   \n",
       "NE       478   2315.000000    410594    None     45044    33198.0    455638   \n",
       "ME       141    449.000000    429709    None      5391     4678.0    435100   \n",
       "DC       627  11044.567568    372534    None     15326    12155.0    387860   \n",
       "\n",
       "      death percentage  \n",
       "state                   \n",
       "CA               1.95%  \n",
       "NY               5.56%  \n",
       "TX               2.10%  \n",
       "IL               3.01%  \n",
       "FL               2.05%  \n",
       "MI               5.13%  \n",
       "NJ               7.86%  \n",
       "OH               3.12%  \n",
       "NC               1.68%  \n",
       "GA               2.21%  \n",
       "TN               1.25%  \n",
       "LA               3.29%  \n",
       "MA               7.16%  \n",
       "VA               2.16%  \n",
       "PA               5.12%  \n",
       "WA               2.44%  \n",
       "MD               3.17%  \n",
       "CT               7.83%  \n",
       "WI               1.04%  \n",
       "AZ               2.59%  \n",
       "MN               2.11%  \n",
       "KY               1.71%  \n",
       "IN               3.03%  \n",
       "SC               2.28%  \n",
       "MO               1.68%  \n",
       "OK               1.18%  \n",
       "AL               1.64%  \n",
       "AR               1.64%  \n",
       "NM               3.00%  \n",
       "CO               2.79%  \n",
       "UT               0.63%  \n",
       "IA               1.57%  \n",
       "MS               3.02%  \n",
       "NV               2.00%  \n",
       "OR               1.67%  \n",
       "WV               2.21%  \n",
       "KS               1.13%  \n",
       "AK               0.64%  \n",
       "NE               1.06%  \n",
       "ME               2.62%  \n",
       "DC               4.09%  "
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "MT = covid._get_value('MT','negative')\n",
    "Q20 = covid[covid['negative'] > MT]\n",
    "Q20.sort_values(by = ['total'], ascending = False)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Q21: Create a new column called recovery_rate which classifies a state as- \n",
    "    a) 'High Recovery' when recovered% > 50\n",
    "    b) 'Modearate Recovery' when recovered% is between 25 and 50 \n",
    "    c) 'Low Recovery' when recovered% is less than 25\n",
    "#### where recovered% = recovered / positive for each state"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>recovered</th>\n",
       "      <th>positive</th>\n",
       "      <th>recover%</th>\n",
       "      <th>recovery_rate</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>state</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>WY</th>\n",
       "      <td>4791.0</td>\n",
       "      <td>5948</td>\n",
       "      <td>80.55</td>\n",
       "      <td>High Recovery</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NE</th>\n",
       "      <td>33198.0</td>\n",
       "      <td>45044</td>\n",
       "      <td>73.70</td>\n",
       "      <td>High Recovery</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ND</th>\n",
       "      <td>17938.0</td>\n",
       "      <td>21846</td>\n",
       "      <td>82.11</td>\n",
       "      <td>High Recovery</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NC</th>\n",
       "      <td>184422.0</td>\n",
       "      <td>210632</td>\n",
       "      <td>87.56</td>\n",
       "      <td>High Recovery</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>MT</th>\n",
       "      <td>9256.0</td>\n",
       "      <td>13071</td>\n",
       "      <td>70.81</td>\n",
       "      <td>High Recovery</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NH</th>\n",
       "      <td>7522.0</td>\n",
       "      <td>8266</td>\n",
       "      <td>91.00</td>\n",
       "      <td>High Recovery</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>MP</th>\n",
       "      <td>29.0</td>\n",
       "      <td>70</td>\n",
       "      <td>41.43</td>\n",
       "      <td>Moderate Recovery</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>MO</th>\n",
       "      <td>0.0</td>\n",
       "      <td>126113</td>\n",
       "      <td>0.00</td>\n",
       "      <td>Low Recovery</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>MN</th>\n",
       "      <td>89392.0</td>\n",
       "      <td>99134</td>\n",
       "      <td>90.17</td>\n",
       "      <td>High Recovery</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>MI</th>\n",
       "      <td>95051.0</td>\n",
       "      <td>138014</td>\n",
       "      <td>68.87</td>\n",
       "      <td>High Recovery</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ME</th>\n",
       "      <td>4678.0</td>\n",
       "      <td>5391</td>\n",
       "      <td>86.77</td>\n",
       "      <td>High Recovery</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NJ</th>\n",
       "      <td>34859.0</td>\n",
       "      <td>205275</td>\n",
       "      <td>16.98</td>\n",
       "      <td>Low Recovery</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>MD</th>\n",
       "      <td>7536.0</td>\n",
       "      <td>124725</td>\n",
       "      <td>6.04</td>\n",
       "      <td>Low Recovery</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NM</th>\n",
       "      <td>16565.0</td>\n",
       "      <td>29157</td>\n",
       "      <td>56.81</td>\n",
       "      <td>High Recovery</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>MA</th>\n",
       "      <td>113768.0</td>\n",
       "      <td>132116</td>\n",
       "      <td>86.11</td>\n",
       "      <td>High Recovery</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NV</th>\n",
       "      <td>2220.0</td>\n",
       "      <td>79980</td>\n",
       "      <td>2.78</td>\n",
       "      <td>Low Recovery</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>LA</th>\n",
       "      <td>154163.0</td>\n",
       "      <td>167458</td>\n",
       "      <td>92.06</td>\n",
       "      <td>High Recovery</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NY</th>\n",
       "      <td>76754.0</td>\n",
       "      <td>458649</td>\n",
       "      <td>16.73</td>\n",
       "      <td>Low Recovery</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>KY</th>\n",
       "      <td>11840.0</td>\n",
       "      <td>68840</td>\n",
       "      <td>17.20</td>\n",
       "      <td>Low Recovery</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>OH</th>\n",
       "      <td>132980.0</td>\n",
       "      <td>153987</td>\n",
       "      <td>86.36</td>\n",
       "      <td>High Recovery</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       recovered  positive  recover%      recovery_rate\n",
       "state                                                  \n",
       "WY        4791.0      5948     80.55      High Recovery\n",
       "NE       33198.0     45044     73.70      High Recovery\n",
       "ND       17938.0     21846     82.11      High Recovery\n",
       "NC      184422.0    210632     87.56      High Recovery\n",
       "MT        9256.0     13071     70.81      High Recovery\n",
       "NH        7522.0      8266     91.00      High Recovery\n",
       "MP          29.0        70     41.43  Moderate Recovery\n",
       "MO           0.0    126113      0.00       Low Recovery\n",
       "MN       89392.0     99134     90.17      High Recovery\n",
       "MI       95051.0    138014     68.87      High Recovery\n",
       "ME        4678.0      5391     86.77      High Recovery\n",
       "NJ       34859.0    205275     16.98       Low Recovery\n",
       "MD        7536.0    124725      6.04       Low Recovery\n",
       "NM       16565.0     29157     56.81      High Recovery\n",
       "MA      113768.0    132116     86.11      High Recovery\n",
       "NV        2220.0     79980      2.78       Low Recovery\n",
       "LA      154163.0    167458     92.06      High Recovery\n",
       "NY       76754.0    458649     16.73       Low Recovery\n",
       "KY       11840.0     68840     17.20       Low Recovery\n",
       "OH      132980.0    153987     86.36      High Recovery"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Find in misssing recover with 0\n",
    "covid['recovered'].fillna(0, inplace = True)\n",
    "\n",
    "#Create recover% = recovered / positive for each state\n",
    "covid['recover%'] = round(covid['recovered']/covid['positive']*100,2)\n",
    "\n",
    "#Categorize recover% group to recovery_rate\n",
    "bins2 = [0,25,50,100]\n",
    "labels2 = ['Low Recovery','Moderate Recovery','High Recovery']\n",
    "covid['recovery_rate'] = pd.cut(covid['recover%'], bins = bins2, labels = labels2, right = False )\n",
    "\n",
    "#Display value\n",
    "covid[['recovered','positive','recover%','recovery_rate']].head(20)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Plotting pandas using IRIS dataset"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Note: This problem makes use of the iris data set and depends upon your having completed the previous problem, so please do that first.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>SepalLength</th>\n",
       "      <th>SepalWidth</th>\n",
       "      <th>PetalLength</th>\n",
       "      <th>PetalWidth</th>\n",
       "      <th>Name</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5.1</td>\n",
       "      <td>3.5</td>\n",
       "      <td>1.4</td>\n",
       "      <td>0.2</td>\n",
       "      <td>setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>4.9</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1.4</td>\n",
       "      <td>0.2</td>\n",
       "      <td>setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>4.7</td>\n",
       "      <td>3.2</td>\n",
       "      <td>1.3</td>\n",
       "      <td>0.2</td>\n",
       "      <td>setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4.6</td>\n",
       "      <td>3.1</td>\n",
       "      <td>1.5</td>\n",
       "      <td>0.2</td>\n",
       "      <td>setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5.0</td>\n",
       "      <td>3.6</td>\n",
       "      <td>1.4</td>\n",
       "      <td>0.2</td>\n",
       "      <td>setosa</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   SepalLength  SepalWidth  PetalLength  PetalWidth    Name\n",
       "0          5.1         3.5          1.4         0.2  setosa\n",
       "1          4.9         3.0          1.4         0.2  setosa\n",
       "2          4.7         3.2          1.3         0.2  setosa\n",
       "3          4.6         3.1          1.5         0.2  setosa\n",
       "4          5.0         3.6          1.4         0.2  setosa"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "iris = pd.read_csv('iris.csv')\n",
    "iris['Name'] = iris['Name'].str.replace(\"Iris-\",\"\") #Remove iris-\n",
    "iris.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Q22: Use the built-in pandas plotting tools to make a box-and-whisker plot showing the distribution of petal ratio and sepal ratio for each of the three species. Your plot should have two subplots, one for petal ratio and one for sepal ratio. You may choose the details of your plots (i.e., how to handle outliers, displaying mean vs median, etc) however you think is best. Please include labels on your x- and y-axes and give an appropriate title to your plot."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>SepalLength</th>\n",
       "      <th>SepalWidth</th>\n",
       "      <th>PetalLength</th>\n",
       "      <th>PetalWidth</th>\n",
       "      <th>Name</th>\n",
       "      <th>SepalRatio</th>\n",
       "      <th>PetalRatio</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5.1</td>\n",
       "      <td>3.5</td>\n",
       "      <td>1.4</td>\n",
       "      <td>0.2</td>\n",
       "      <td>setosa</td>\n",
       "      <td>1.46</td>\n",
       "      <td>7.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>4.9</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1.4</td>\n",
       "      <td>0.2</td>\n",
       "      <td>setosa</td>\n",
       "      <td>1.63</td>\n",
       "      <td>7.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>4.7</td>\n",
       "      <td>3.2</td>\n",
       "      <td>1.3</td>\n",
       "      <td>0.2</td>\n",
       "      <td>setosa</td>\n",
       "      <td>1.47</td>\n",
       "      <td>6.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4.6</td>\n",
       "      <td>3.1</td>\n",
       "      <td>1.5</td>\n",
       "      <td>0.2</td>\n",
       "      <td>setosa</td>\n",
       "      <td>1.48</td>\n",
       "      <td>7.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5.0</td>\n",
       "      <td>3.6</td>\n",
       "      <td>1.4</td>\n",
       "      <td>0.2</td>\n",
       "      <td>setosa</td>\n",
       "      <td>1.39</td>\n",
       "      <td>7.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   SepalLength  SepalWidth  PetalLength  PetalWidth    Name  SepalRatio  \\\n",
       "0          5.1         3.5          1.4         0.2  setosa        1.46   \n",
       "1          4.9         3.0          1.4         0.2  setosa        1.63   \n",
       "2          4.7         3.2          1.3         0.2  setosa        1.47   \n",
       "3          4.6         3.1          1.5         0.2  setosa        1.48   \n",
       "4          5.0         3.6          1.4         0.2  setosa        1.39   \n",
       "\n",
       "   PetalRatio  \n",
       "0         7.0  \n",
       "1         7.0  \n",
       "2         6.5  \n",
       "3         7.5  \n",
       "4         7.0  "
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "iris['SepalRatio'] = round(iris['SepalLength']/iris['SepalWidth'],2)\n",
    "iris['PetalRatio'] = round(iris['PetalLength']/iris['PetalWidth'],2)\n",
    "iris.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.rcParams.update({'font.size':15, 'figure.figsize':(10,8)})\n",
    "ax1 = iris.boxplot(by = 'Name', column = ['SepalRatio'])\n",
    "plt.title(\"Boxplot of Sepal ratio\")\n",
    "plt.suptitle(\"\")\n",
    "ax1.set_xlabel('Name of Species')\n",
    "ax1.set_ylabel('Sepal Ratio')\n",
    "plt.show()\n",
    "\n",
    "ax2 = iris.boxplot(by = 'Name', column = ['PetalRatio'])\n",
    "plt.title(\"Boxplot of Petal ratio\")\n",
    "plt.suptitle(\"\")\n",
    "ax2.set_xlabel('Name of Species')\n",
    "ax2.set_ylabel('Petal Ratio')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Q23: Use the built-in pandas plotting tools to make a scatter matrix plot for the four original features (petal width, petal length, sepal width and sepal length). Each point in the scatter plot should be colored according to its species. Hint: see the documentation at https://pandas.pydata.org/pandas-docs/stable/visualization.html# scatter-matrix-plot to get started."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x576 with 16 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "from pandas.plotting import scatter_matrix\n",
    "iris = pd.read_csv('iris.csv')\n",
    "iris['Name'] = iris['Name'].str.replace(\"Iris-\",\"\") #Remove iris-\n",
    "colors = iris['Name'].replace({'setosa':'red', 'virginica': 'green', 'versicolor':'blue'})\n",
    "pd.plotting.scatter_matrix(iris, c = colors, cmap='viridis');"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Load the stockprice dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>Amazon</th>\n",
       "      <th>Google</th>\n",
       "      <th>Facebook</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5/1/18</td>\n",
       "      <td>927.800</td>\n",
       "      <td>901.94</td>\n",
       "      <td>151.74</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>5/2/18</td>\n",
       "      <td>946.645</td>\n",
       "      <td>909.62</td>\n",
       "      <td>153.34</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>5/3/18</td>\n",
       "      <td>946.000</td>\n",
       "      <td>914.86</td>\n",
       "      <td>153.60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>5/4/18</td>\n",
       "      <td>944.750</td>\n",
       "      <td>926.07</td>\n",
       "      <td>150.17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5/7/18</td>\n",
       "      <td>940.520</td>\n",
       "      <td>933.54</td>\n",
       "      <td>151.45</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     Date   Amazon  Google  Facebook\n",
       "0  5/1/18  927.800  901.94    151.74\n",
       "1  5/2/18  946.645  909.62    153.34\n",
       "2  5/3/18  946.000  914.86    153.60\n",
       "3  5/4/18  944.750  926.07    150.17\n",
       "4  5/7/18  940.520  933.54    151.45"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "stock = pd.read_csv(\"timeseries_stockprice.csv\", header=0) #add header\n",
    "stock.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Q24-Plotting a single series\n",
    "\n",
    "To plot a single series, such as the closing stock price for Amazon for each date, you can simple designate the x-axis values as Date and the y-axis values as Amazon and set the kind parameter to line."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAmkAAAHqCAYAAABfvdk5AAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjMuMiwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8vihELAAAACXBIWXMAAAsTAAALEwEAmpwYAABciElEQVR4nO3dd3xW5f3/8dcnm0AWkLD3RgRkKyo4kVq3FbXDPdpqa9W23/6+ravfDv3W0a+2Uquo1Yp1oBYVxV2VGbYiIJAAIYxAEkL2un5/3HfwJoSR5M4938/HI4+Qc65zziccY95c57quY845RERERCS0xAS7ABERERE5lEKaiIiISAhSSBMREREJQQppIiIiIiFIIU1EREQkBCmkiYiIiISguGAX4G+dO3d2ffv2DXYZIiIiIke1bNmyPc65zKb2RVxI69u3L9nZ2cEuQ0REROSozGzL4fbpcaeIiIhICFJIExEREQlBCmkiIiIiIUghTURERCQEKaSJiIiIhKCIm915LEpKSti9ezc1NTXBLkVaID4+nqysLFJTU4NdioiISJuJupBWUlLCrl276NGjB+3atcPMgl2SNINzjoqKCrZv3w6goCYiIhEr6h537t69mx49epCcnKyAFobMjOTkZHr06MHu3buDXY6IiEibibqQVlNTQ7t27YJdhrRSu3bt9LhaREQiWtSFNEA9aBFA91BERCJdVIY0ERERkVCnkCYiIiISgo4ppJnZQDP7m5mtMrM6M/u4iTZmZv/PzLaZWYWZ/cfMRjfRbriZfWBm5WaWb2b3mVlsS84V7Zxz9OvXDzNj48aNwS5HRERE/OhYe9KOA74FbPB+NOW/gN8A9wPnAaXA+2bWtaGBmWUA7wMOuAC4D7gDuLe55xJYuHAhubm5ALz44ovBLUZERET86lhD2lznXC/n3HeALxvvNLMkPMHqD865x5xz7wPfwRPGbvFpejPQDrjYOfeec24mnoB2u5mlNvNcUW/27Nm0b9+eiRMnMnv27GCXIyIiIn50TCHNOVd/lCYnAanASz7HlAFzgek+7aYD7zrnSny2vYgnuE1p5rmiWl1dHS+//DLnn38+1157LWvXrmX16tUH9j/zzDOYGcuXL2fq1KkkJyczevRoli9fTllZGddccw1paWn079//kID31ltvcdZZZx1Y1X/SpEnMnz//oDZm1uTHM888c6DNSy+9xPHHH09iYiK9evXiv//7v6mtrT2kxjVr1nDWWWfRvn17hg4dypw5c9rmL01ERCSM+GviwFCgDvi60favvPt8263zbeCc2wqU+7Q71nNFtQ8//JBdu3Zx+eWXc+mllxIfH99kb9pVV13FFVdcwauvvopzjksvvZTrrruO7t2788orrzBx4kR+8IMfkJeXd+CYnJwczjvvPJ577jleffVVTjrpJKZPn87nn39+oM3ChQsP+rj11lsxMwYOHAjA/PnzmTFjBmPGjOGNN97g1ltv5U9/+hO33HJoZ+iVV17J+eefz2uvvcagQYO4/PLLD6pHREQk0HaVVFJeXXv0hm3IX6+FygBKnXN1jbYXAclmluCcq/a2K27i+CLvvuacy2/unfsla/NLjt6wDQzvnsrd5x3X7ONmz55Neno655xzDgkJCZx11lm8+OKL/P73vz9oDbE777yTq666CvBMNDj33HOZOnUqv/vd7wCYMGECr7zyCnPnzuWHP/whwEFBqr6+ntNOO40vv/ySp556ismTJwMwadKkA22WL1/O3//+d+6++25OPvlkAO666y6mTp3Ks88+C8A555wDwK9+9St+/etf07NnzwPH/+xnP+Paa68FYOzYsXTp0oU333yTm2++udl/LyIiIq21JKeQH/1zOWcMzeL+S0cGrQ5/LsHhmthmTew7XLtjadPkPjO70cyyzSy7oKDgWGoNa1VVVbz22mtcdNFFJCQkAHDFFVeQm5vLokWLDmp7xhlnHPhzQy/X6aeffmBbWloamZmZB96FCZCXl8dVV11Fjx49iIuLIz4+nvnz57Nhw6FzRgoKCrjooos488wzueuuuwDPo9jly5fzne9856C2M2bMoL6+noULFx60/eyzzz7w506dOpGVlaWeNBERCTjnHM98nsOVf19ESlIc153SL6j1+KsnrQhIMbPYRj1g6UC5c67Gp116E8en8U0P27Ge6wDn3BPAEwDjxo1rKuAdUUt6soJp3rx5FBcX861vfYvi4mIApk6dSmJiIrNnz+bEE0880DY9Pf3AnxsCne+2hu2VlZWAp+fs/PPPZ//+/dx3330MHDiQ9u3bc9dddx3yrsza2louu+wyEhISeP755w/04O3Zs4eamhq6dOlyUPuGrwsLCw/afqR6REREAqGiuo7/fm0Nc1Zs58xhXXhoxihSk+KDWpO/Qto6IBYYCKz32d54DNo6Go0rM7NeQHufdsd6rqjVMPascU8VeAbrP/zwwy0+98aNG1mxYgXz5s078IgSoKKi4pC2d955J0uXLmXRokWkpaUd2N65c2fi4+MPCXW7du0CoGPHji2uT0RExN+2FZZz03PL+GpnCbefNZhbThtITEzwXz/or8edC4ASPEtlAGBmyXjWOJvn024eMM3MUny2zQAqgE+aea6oVFpayptvvskVV1zBRx99dNDHQw89xK5du/joo49afP6GMJaYmHhg25YtWw6aNADw3HPP8ec//5mnnnqKESNGHLQvNjaWsWPH8vLLLx+0/aWXXiImJuagnj4REZFg+s+GAs577DPyisqZddV4fnLGoJAIaHCMPWnekPQt75c9gFQzu9T79dvOuXIz+yPwGzMrwtPjdTueEPioz6lmAj8B5pjZ/UB/4B7goYZlOZxzlcd4rqj0xhtvUF5ezk9/+lMmTpx40L7Jkyfzu9/9jtmzZ3PKKae06PxDhw6lZ8+e3HHHHfz2t79l//793H333fTo0eNAm02bNnHjjTcyffp0+vTpc9A4uAEDBpCZmcm9997LtGnTuOaaa7j88stZs2YNv/nNb7jhhhsOmjQgIiISDM45Hv9kE396dz2Du6Qw83tj6du5fbDLOsixPu7MAl5utK3h635ALvBHPEHqV0AnIBs4yzm3q+EA51yRmZ0BPIZn3bNi4GE8Qc3XUc8VrWbPns2gQYMOCWgA8fHxXHbZZcyePZsJEya06PyJiYnMmTOHH//4x1x66aX07NmT//7v/+bjjz/miy++AGDbtm1UVlYyb9485s07uHPz6aef5uqrr+bss8/mxRdf5H/+53/45z//SVZWFnfccQf33tv45RIiIiKBVVpVy50vreKdL3dy3qju3H/J8SQn+GsEmP+Yc80eZx/Sxo0b57Kzsw+7/6uvvmLYsGEBrEjaiu6liIg016aCUm78Rza5e8v51fShXHdyv4OWrgo0M1vmnBvX1L7Qi40iIiIibeDdL3dyx0urSIyL4bnrJnDSgM7BLumIFNJEREQkotXVOx5+bwOPfbSRUT3TePx7Y+me3i7YZR2VQpqIiIhErOLyan764ko+2VDAjHG9uPeC40iKjw12WcdEIU1EREQi0tr8Em5+fhk79lXw+4uO54oJvYI6/qy5ojKkOefC6ibJ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\n",
      "text/plain": [
       "<Figure size 720x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "stock.plot.line(x= \"Date\", y= \"Amazon\");"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Q25-Plotting two series\n",
    "\n",
    "When plotting two series, set the y-axis values to a list containing the two column names, each being a data series."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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m960T/Xf9a538dWvfpX/+T//J7fffjtz587l3HPP5Wc/+9lQnZtuuon3v//9nH/++dxxxx0sXbqUyy67jKuuumqozooVK7jooos48cQTuf322zn//PO58MIL9/r8P//5zznzzDOZOXMmt912G1/4whe48847eec73znyH/4gGrXdnSmljoh4A/APZOc02wF8B/hQSdWryELZR4EWYAVwVkppfVFbbYUAdwPZOdTagevIgpokSePKp+74Lx5bNzZzEC85opFPnnfCiLZpbW2lp6eHuXPnDitPKdHfv/MEDpWVlaxcuZJ//dd/5atf/SrveMc7ADj77LN5+ctfzqc//Wl+8IMfMDAwwPLly1m2bBnXXHMNAG9605vYsmULn/vc5/jgBz9IXV0dV199Nccffzzf/OY3iQje/OY309vby0c+8pE99vfyyy/n1FNP5eabbx4qmz17NmeeeSa//e1veelLXzqin/9gGdULrKeUfp9SektKaUJKqTmltCyl1FZSJ6WUPpNSmpNSqk8p/UFK6ZEybT2WUnpDoc6slNIVXrdTkqSxl1J2ooXSc4Bdc801VFdXDy3/+I//yIMPPkhKiaVLh450oqKigqVLlw7NpK1Zs4Z169YNqwNw4YUX0tHRwaOPPgrAgw8+yHnnnTfsec8///w99rWrq4v777+fP/qjP6Kvr29oOe2006iuruahhx7a/xfiABvta3dKkqQRGulM1libOnUqtbW1rFmzZlj5xRdfzBlnnAHASSedBMDzzz/PxIkTd7kM1owZM+jq6qKnp4fnn39+qKy0DsDmzZsBeOGFFyg91dbeTr3V1tZGf38/73vf+3jf+963y/rnnntuj9uPJUOaJEkakaqqKk455RR++MMfcuWVVw6Vz5gxY5egNWvWLLZt20ZXV9ewoLZ+/XoaGhqora1l1qxZQHZd02Lr12dHQk2ZMgWAmTNnUnrS+r2dxL6pqYmIYPny5bzlLW/ZZf3glxvyaFR3d0qSpMPDBz/4QR544AG+/vWv77HeSSedRERw2223DZWllLjttts47bTTAJgzZw5HHHEEt95667Btb7nlFhobG3nZy1421NYdd9wxtLsV4Lvf/e4en3/ChAm85jWv4YknnmDJkiW7LHkOac6kSZKkEbvgggv44Ac/yLJly7jvvvs477zzmDp1Kq2trdxzzz0ATJw4keOPP563v/3tXHLJJXR0dLBo0SJuuukmVq5cyY033ghkx6gtX76cd7/73bS0tHDWWWfxk5/8hBtvvJHPfvaz1NXVAfCRj3yEk08+mYsuuoh3vvOdPP7449x0001DbezO5z//ec4880wqKir4wz/8QyZNmsTq1av5/ve/z2c+8xmOOeaYA/xq7aeU0rhaFi9enCRJyqvHHntsrLswqr71rW+lN77xjam5uTlVVVWlWbNmpbe+9a3pzjvvHKrT2dmZLrnkkjR9+vRUU1OTFi9enO6+++5d2rr++uvTUUcdlaqrq9OCBQvStddeu0udm2++OR111FGptrY2vfa1r0333HNPAtLtt98+VGfevHnpsssuG7bdL3/5y3T22WenSZMmpYaGhnT88cenD33oQ6m9vX30Xozd2NOYAyvSbjJNpFTuEpmHriVLlqQVK1aMdTckSSrr8ccf5/jjjx/rbowb//zP/8zFF1/M008/zYIFC8a6O2Xtacwj4qGU0pJy69zdKUmSDhnvfe97Oeuss2hububhhx/mb//2bzn33HNzG9BeDEOaJEk6ZLS2tvK+972P1tZWWlpauPDCC/n85z8/1t06IAxpkiTpkHHLLbeMdRcOGk/BIUmSlEOGNEmSpBwypEmSJOWQIU2SJCmHDGmSJEk5ZEiTJEnKIUOaJEkakeXLlxMRuyxvfOMbD1ofli1bxpIlZU/Uf0AsX76cqVOnHrTnA8+TJkmS9sPkyZO5++67dynT6DGkSZKkEauqquI1r3nNWHdjXHN3pyRJGhXPP/88f/Znf8bChQupr6/nmGOO4eMf/zg7duwYVq+7u5sPf/jDzJs3j9raWhYsWMBHP/rRYXW+8pWvcMIJJ1BbW8u8efN2e+mnb3/72xx33HHU1dVx2mmn8dhjjw1b39XVxQc+8AFmzpxJXV0dJ510Ej/84Q93aeeGG27g6KOPpra2lkWLFnHdddft8WdNKfH+97+f5uZmHnjggX15eUbMmTRJkrRf+vr6hj3etGkTU6ZM4dprr6W5uZknn3yS5cuXs3HjRr70pS8BWbi54IILuP/++7niiitYvHgxa9eu5T/+4z+G2vm7v/s7Pvaxj/HhD3+YM844g4ceeogrrriChoYGLrnkkqF6zz77LJdeeimf/vSnqa+v55Of/CRnn302v/vd76irqwPgXe96F9/97nf57Gc/y6JFi7jppps499xzue+++zjttNMAuOmmm3j/+9/PpZdeytlnn819993HZZddRk9PD5dffvkuP/fAwADvfve7+fa3v82PfvQjXvWqV436azv0Yo2nZfHixUmSpLx67LHHxroLL9onP/nJBOyy3HPPPcPq9fb2pm984xuptrY29fT0pJRSuvvuuxOQvvOd75Rte8uWLWnChAlp+fLlw8qvuOKKNGPGjNTX15dSSukd73hHAtLPf/7zoTqrVq1KlZWV6cYbb0wpZa91RKSvfe1rQ3X6+/vTCSeckN70pjcNPT7iiCPSsmXLhj3fe9/73tTY2Ji6u7uHfuaWlpbU19eX/vRP/zTNmDEj/fa3v92n12tPYw6sSLvJNM6kSZI01u66HF54dGyee+bL4JyrRrzZ5MmTuffee4eVHXvssXzhC1/gy1/+Ms888wzbt28fWrd69WoWLVrEj370I6ZMmcL5559ftt3777+fzs5Oli5dOmym7g1veAOf/vSnWbNmDfPmzQNg+vTpnHrqqUN15s2bx+LFi/nVr37Fe97zHh588EFSSixdunSoTkVFBUuXLh3afbpmzRrWrVs3rA7AhRdeyI033sijjz7KSSedBEB/fz8XXXQRv/zlL/npT3/KMcccM+LXbSQMaZIkacSqqqp2OQXGddddx1//9V9z+eWXc/rpp9Pc3MyDDz7IX/7lXw4FttbWVmbNmrXbdjdt2gTACSecUHb9c889NyyklZo+fTrPP/88kB0jN3HiRBoaGobVmTFjBl1dXfT09AzVnTFjxi51ADZv3jxU1tXVxV133cXb3va2Ax7QwJAmSdLY24+ZrDy69dZbWbp0KZ/5zGeGykoP5G9paRkKRuVMmTIFgO9973u7BCfIZusGbdiwYZf1GzZsGAp4s2bNYtu2bXR1dQ0LauvXr6ehoYHa2tqhwFja1vr164f1B2DSpEncfPPNnHvuucyaNYurrjqw4+a3OyVJ0qjo7u6mtrZ2WNk3vvGNYY/PPPNMNm/ezPe+972ybZxyyinU19ezbt06lixZsssyadKkobobNmzgF7/4xdDj1atX8/DDD/PqV78agJNOOomI4Lbbbhuqk1LitttuG/rSwJw5czjiiCO49dZbh/XjlltuobGxkZe97GW79P/WW2/lmmuuGRZGDwRn0iRJ0qg466yz+Id/+AdOPvlkjjrqKL7xjW/w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\n",
      "text/plain": [
       "<Figure size 720x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "stock.plot(kind = \"line\", x = \"Date\", y = [\"Google\", \"Facebook\"]);"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Q26- Plotting three series\n",
    "\n",
    "When plotting three series, set the y-axis values to a list containing the three column names, each being a data series."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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du1a3XXXXZK8Y9SWLFmir371qyovL9epp56qP/7xj7rrrrt0ww03xM4Sjbdo0SLdd999+vu//3sVFxfr0ksv3Ttv6I7OKNhfJ87uBAD42Xg5u7O8vHxYeWdnp7voootcWVmZKysrc1/60pfc0qVLnSS3atWqWLtgMOguv/xyV1dX57Kzs920adPcD37wg4R13XfffW7BggUuNzfXlZaWuqOPPtrdcsstsfoLL7zQLVy40P3mN79xM2fOdNnZ2e64445LeB3nnOvu7naXXHKJq6ysdNnZ2W7hwoXumWeeGbbtd9xxhzv44INdVlaWmz59urv11lt3+TP//Oc/d4FAwP3yl7/c6fs12rM7zasfP+rr692yZcvGejMAAEhpzZo1mjNnzlhvBvahnfW5mS13zqW8CSnHpAEAAPgQIQ0AAMCHCGkAAAA+REgDAADwIUIaAACADxHSAAAAfIiQBgAA4EOENAAAAB8ipAEAAPgQIQ0AAMCHCGkAAGDUHn/8cZ122mkqLy9Xdna26urqdP755+vll18es22aNm2avvvd747Z66cLIQ0AAIzKd77zHX32s59VXV2dfv7zn+v555/XjTfeqM7OTp1wwgl67733xnoT92uZY70BAABg//PEE0/o9ttv1y9/+UtddNFFCXVf+MIXtHTpUuXl5Y3Nxo0TjKQBAIARu/3223XUUUcNC2hRixYtUm1trSQpGAzqm9/8pqqrq5Wbm6ujjjpKzz777LBl7rzzTs2cOVM5OTmaMWOGbrvttmFtHn74Yc2cOVN5eXk6+eSTtXLlSpmZ7r333p1u70svvaQTTzxR+fn5Ki8v15e//GV1dnaO+OfelwhpAABgRAYHB/Xqq6/qtNNO2632X/7yl/XLX/5S//Iv/6LHHntMkydP1llnnaWXXnop1uaee+7RpZdeqrPPPltLly7V4sWLdfnll+vGG2+MtVm2bJnOP/98LViwQI899pjOPvtsnXfeebt8/ZdfflmnnHKKqqur9cgjj+j222/X7373O1188cUj/+H3IXZ3AgAwxm76y01au33tmLz27Amz9f2jvz+iZVpaWtTX16fJkycnlDvnFAqFYs8zMjK0du1aPfDAA/rlL3+pCy+8UJJ0+umn67DDDtN1112n3//+9wqHw1qyZIkuuugi3XLLLZKk0047Te3t7frxj3+sb3/728rNzdVN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\n",
      "text/plain": [
       "<Figure size 720x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "stock.plot(kind = \"line\", x = \"Date\", y = [\"Amazon\",\"Facebook\",\"Google\"]);"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Load the following dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Rank</th>\n",
       "      <th>Country</th>\n",
       "      <th>Average_salary</th>\n",
       "      <th>Pre_Salary</th>\n",
       "      <th>Grad_Jobs</th>\n",
       "      <th>PhD</th>\n",
       "      <th>Avg_Age_Students</th>\n",
       "      <th>Avg_Work_Experience</th>\n",
       "      <th>Tuition</th>\n",
       "      <th>Duration</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>School</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Chicago (Booth)</th>\n",
       "      <td>1</td>\n",
       "      <td>US</td>\n",
       "      <td>113217</td>\n",
       "      <td>63</td>\n",
       "      <td>93</td>\n",
       "      <td>96</td>\n",
       "      <td>27</td>\n",
       "      <td>60</td>\n",
       "      <td>106800</td>\n",
       "      <td>21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Dartmouth (Tuck)</th>\n",
       "      <td>2</td>\n",
       "      <td>US</td>\n",
       "      <td>115143</td>\n",
       "      <td>62</td>\n",
       "      <td>97</td>\n",
       "      <td>100</td>\n",
       "      <td>28</td>\n",
       "      <td>60</td>\n",
       "      <td>106980</td>\n",
       "      <td>21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Virginia (Darden)</th>\n",
       "      <td>3</td>\n",
       "      <td>US</td>\n",
       "      <td>104478</td>\n",
       "      <td>67</td>\n",
       "      <td>95</td>\n",
       "      <td>97</td>\n",
       "      <td>27</td>\n",
       "      <td>60</td>\n",
       "      <td>107800</td>\n",
       "      <td>21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Harvard</th>\n",
       "      <td>4</td>\n",
       "      <td>US</td>\n",
       "      <td>121785</td>\n",
       "      <td>44</td>\n",
       "      <td>97</td>\n",
       "      <td>94</td>\n",
       "      <td>27</td>\n",
       "      <td>48</td>\n",
       "      <td>107000</td>\n",
       "      <td>18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Columbia</th>\n",
       "      <td>5</td>\n",
       "      <td>US</td>\n",
       "      <td>113340</td>\n",
       "      <td>55</td>\n",
       "      <td>98</td>\n",
       "      <td>97</td>\n",
       "      <td>28</td>\n",
       "      <td>60</td>\n",
       "      <td>111736</td>\n",
       "      <td>20</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                   Rank Country  Average_salary  Pre_Salary  Grad_Jobs  PhD  \\\n",
       "School                                                                        \n",
       "Chicago (Booth)       1      US          113217          63         93   96   \n",
       "Dartmouth (Tuck)      2      US          115143          62         97  100   \n",
       "Virginia (Darden)     3      US          104478          67         95   97   \n",
       "Harvard               4      US          121785          44         97   94   \n",
       "Columbia              5      US          113340          55         98   97   \n",
       "\n",
       "                   Avg_Age_Students  Avg_Work_Experience  Tuition  Duration  \n",
       "School                                                                       \n",
       "Chicago (Booth)                  27                   60   106800        21  \n",
       "Dartmouth (Tuck)                 28                   60   106980        21  \n",
       "Virginia (Darden)                27                   60   107800        21  \n",
       "Harvard                          27                   48   107000        18  \n",
       "Columbia                         28                   60   111736        20  "
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "mydata = pd.read_csv(\"mba.csv\", header=0, index_col =\"School\") #add header and index\n",
    "mydata.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Q27-Plot the Box plot using both approach available in pandas: \n",
    "\n",
    "    * .plot\n",
    "    * .boxplot"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "mydata['Average_salary'].plot(kind= \"box\", title=\"Box plot of average salary of the top 25 MBA programs\");"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "mydata['Average_salary'].plot.box(vert = False, title = \"Box plot of average salary of the top 25 MBA programs\");"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Q28- creat a box plot of two variables: \"the average student\" and \"average work experience\" in one graph (side by side)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "mydata[['Avg_Age_Students','Avg_Work_Experience']].plot.box();"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Q29- Formatting with .boxplot().\n",
    "change the following parameters for the previous question as grid=False and fontsize=14:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 720x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "mydata[['Avg_Age_Students','Avg_Work_Experience']].plot.box(grid=False, fontsize=14);"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Q30-Histograms\n",
    "plot the histogram of Tuitions with proper bins"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "mydata['Tuition'].plot(kind = 'hist', title = 'Tuition Histogram', color = 'r', alpha = 0.5, bins = 5);"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Q31-Scatter plots\n",
    "plot the scatter plot using Rank (x-axis) and Grad_job (y-axis) and set the proper xlim"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "from matplotlib.axes._axes import _log as matplotlib_axes_logger\n",
    "matplotlib_axes_logger.setLevel('ERROR')\n",
    "mydata.plot.scatter(x = 'Rank', y = 'Grad_Jobs',\n",
    "                    title='MBA Program Rank vs Percentage of graduates with jobs',xlim=0 );"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Q32-Bar charts\n",
    "plot horrizontal bar graph for Tuition and assign a proper title for your graph"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.rcParams[\"figure.figsize\"]=10,5\n",
    "mydata['Tuition'].plot.bar(title='Total tuition(USD) for the top MBA programs');"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Q33-Refine the bar chart with a few aesthetic elements.\n",
    "\n",
    "\n",
    "* The legend parameter is set to False to remove the redundant legend.\n",
    "* The color parameter can set the color values using RGB. RGB is a way of making colors. You have to provide an amount of red, green and blue + the transparency and it returns a color.\n",
    "* The edgecolor parameter allows you to set the border of the bars."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "from matplotlib import rcParams\n",
    "rcParams.update({'figure.autolayout': True}) # keeps labels cutoff\n",
    "mydata.head(7).plot(kind='barh', y = 'Tuition', title='Tuition fee(in USD) for the top 7 ranked MBA programs',\n",
    "                   legend=False, color=(0.3, 0.5, 0.2, 0.6), edgecolor='white');"
   ]
  }
 ],
 "metadata": {
  "anaconda-cloud": {},
  "kernel_info": {
   "name": "python3"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  },
  "nteract": {
   "version": "0.2.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
